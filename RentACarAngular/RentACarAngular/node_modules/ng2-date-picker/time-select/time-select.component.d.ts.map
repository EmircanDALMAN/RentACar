{"version":3,"file":"time-select.component.d.ts","sources":["time-select.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ECalendarValue } from '../common/types/calendar-value-enum';\nimport { SingleCalendarValue } from '../common/types/single-calendar-value';\nimport { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { TimeSelectService, TimeUnit } from './time-select.service';\nimport { Moment } from 'moment';\nimport { ITimeSelectConfig, ITimeSelectConfigInternal } from './time-select-config.model';\nimport { ControlValueAccessor, FormControl, ValidationErrors, Validator } from '@angular/forms';\nimport { CalendarValue } from '../common/types/calendar-value';\nimport { UtilsService } from '../common/services/utils/utils.service';\nimport { IDate } from '../common/models/date.model';\nimport { DateValidator } from '../common/types/validator.type';\nexport declare class TimeSelectComponent implements OnInit, OnChanges, ControlValueAccessor, Validator {\n    timeSelectService: TimeSelectService;\n    utilsService: UtilsService;\n    cd: ChangeDetectorRef;\n    config: ITimeSelectConfig;\n    displayDate: SingleCalendarValue;\n    minDate: SingleCalendarValue;\n    maxDate: SingleCalendarValue;\n    minTime: SingleCalendarValue;\n    maxTime: SingleCalendarValue;\n    theme: string;\n    onChange: EventEmitter<IDate>;\n    isInited: boolean;\n    componentConfig: ITimeSelectConfigInternal;\n    inputValue: CalendarValue;\n    inputValueType: ECalendarValue;\n    validateFn: DateValidator;\n    hours: string;\n    minutes: string;\n    seconds: string;\n    meridiem: string;\n    showDecHour: boolean;\n    showDecMinute: boolean;\n    showDecSecond: boolean;\n    showIncHour: boolean;\n    showIncMinute: boolean;\n    showIncSecond: boolean;\n    showToggleMeridiem: boolean;\n    api: {\n        triggerChange: any;\n    };\n    constructor(timeSelectService: TimeSelectService, utilsService: UtilsService, cd: ChangeDetectorRef);\n    _selected: Moment;\n    get selected(): Moment;\n    set selected(selected: Moment);\n    ngOnInit(): void;\n    init(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    writeValue(value: CalendarValue): void;\n    registerOnChange(fn: any): void;\n    onChangeCallback(_: any): void;\n    registerOnTouched(fn: any): void;\n    validate(formControl: FormControl): ValidationErrors | any;\n    processOnChangeCallback(value: Moment): CalendarValue;\n    initValidators(): void;\n    decrease(unit: TimeUnit): void;\n    increase(unit: TimeUnit): void;\n    toggleMeridiem(): void;\n    emitChange(): void;\n    calculateTimeParts(time: Moment): void;\n    private handleConfigChange;\n}\n"]}