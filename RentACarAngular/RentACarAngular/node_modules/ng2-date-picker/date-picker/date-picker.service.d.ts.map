{"version":3,"file":"date-picker.service.d.ts","sources":["date-picker.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { IDatePickerConfig, IDatePickerConfigInternal } from './date-picker-config.model';\nimport { Moment } from 'moment';\nimport { UtilsService } from '../common/services/utils/utils.service';\nimport { IDayCalendarConfig } from '../day-calendar/day-calendar-config.model';\nimport { TimeSelectService } from '../time-select/time-select.service';\nimport { DayTimeCalendarService } from '../day-time-calendar/day-time-calendar.service';\nimport { ITimeSelectConfig } from '../time-select/time-select-config.model';\nimport { CalendarMode } from '../common/types/calendar-mode';\nexport declare class DatePickerService {\n    private utilsService;\n    private timeSelectService;\n    private daytimeCalendarService;\n    readonly onPickerClosed: EventEmitter<null>;\n    private defaultConfig;\n    constructor(utilsService: UtilsService, timeSelectService: TimeSelectService, daytimeCalendarService: DayTimeCalendarService);\n    getConfig(config: IDatePickerConfig, mode?: CalendarMode): IDatePickerConfigInternal;\n    getDayConfigService(pickerConfig: IDatePickerConfig): IDayCalendarConfig;\n    getDayTimeConfigService(pickerConfig: IDatePickerConfig): ITimeSelectConfig;\n    getTimeConfigService(pickerConfig: IDatePickerConfig): ITimeSelectConfig;\n    pickerClosed(): void;\n    isValidInputDateValue(value: string, config: IDatePickerConfig): boolean;\n    convertInputValueToMomentArray(value: string, config: IDatePickerConfig): Moment[];\n    private getDefaultFormatByMode;\n}\n"]}