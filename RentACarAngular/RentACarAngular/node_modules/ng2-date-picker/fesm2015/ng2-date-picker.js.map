{"version":3,"file":"ng2-date-picker.js","sources":["../src/lib/common/types/calendar-mode-enum.ts","../src/lib/common/types/calendar-value-enum.ts","../src/lib/common/types/selection-event.enum.ts","../esm2015/src/lib/common/services/dom-appender/dom-appender.service.ts","../esm2015/src/lib/common/services/utils/utils.service.ts","../../src/lib/day-calendar/day-calendar.service.ts","../../src/lib/time-select/time-select.service.ts","../../src/lib/day-time-calendar/day-time-calendar.service.ts","../../src/lib/date-picker/date-picker.service.ts","../../src/lib/date-picker/date-picker.component.ts","../../src/lib/date-picker/date-picker-directive.service.ts","../../src/lib/date-picker/date-picker.directive.ts","../../src/lib/day-calendar/day-calendar.component.ts","../../src/lib/month-calendar/month-calendar.service.ts","../../src/lib/month-calendar/month-calendar.component.ts","../../src/lib/time-select/time-select.component.ts","../../src/lib/calendar-nav/calendar-nav.component.ts","../../src/lib/day-time-calendar/day-time-calendar.component.ts","../../../src/lib/date-picker.module.ts","../../../src/lib/ng2-date-picker.ts"],"sourcesContent":["export enum ECalendarMode {\n  Day,\n  DayTime,\n  Month,\n  Time\n}\n","export enum ECalendarValue {\n  Moment = 1,\n  MomentArr,\n  String,\n  StringArr\n}\n","export enum SelectEvent {\n  INPUT = 'input',\n  SELECTION = 'selection'\n}\n","import {Injectable} from '@angular/core';\nimport {TDrops, TOpens} from '../../types/poistions.type';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DomHelper {\n\n  private static setYAxisPosition(element: HTMLElement, container: HTMLElement, anchor: HTMLElement, drops: TDrops) {\n    const anchorRect = anchor.getBoundingClientRect();\n    const containerRect = container.getBoundingClientRect();\n    const bottom = anchorRect.bottom - containerRect.top;\n    const top = anchorRect.top - containerRect.top;\n\n    if (drops === 'down') {\n      element.style.top = (bottom + 1 + 'px');\n    } else {\n      element.style.top = (top - 1 - element.scrollHeight) + 'px';\n    }\n  }\n\n  private static setXAxisPosition(element: HTMLElement, container: HTMLElement, anchor: HTMLElement, dimElem: HTMLElement, opens: TOpens) {\n    const anchorRect = anchor.getBoundingClientRect();\n    const containerRect = container.getBoundingClientRect();\n    const left = anchorRect.left - containerRect.left;\n\n    if (opens === 'right') {\n      element.style.left = left + 'px';\n    } else {\n      element.style.left = left - dimElem.offsetWidth + anchor.offsetWidth + 'px';\n    }\n  }\n\n  private static isTopInView(el: HTMLElement): boolean {\n    const {top} = el.getBoundingClientRect();\n    return (top >= 0);\n  }\n\n  private static isBottomInView(el: HTMLElement): boolean {\n    const {bottom} = el.getBoundingClientRect();\n    return (bottom <= window.innerHeight);\n  }\n\n  private static isLeftInView(el: HTMLElement): boolean {\n    const {left} = el.getBoundingClientRect();\n    return (left >= 0);\n  }\n\n  private static isRightInView(el: HTMLElement): boolean {\n    const {right} = el.getBoundingClientRect();\n    return (right <= window.innerWidth);\n  }\n\n  appendElementToPosition(config: IAppendToArgs): void {\n    const {container, element} = config;\n\n    if (!container.style.position || container.style.position === 'static') {\n      container.style.position = 'relative';\n    }\n\n    if (element.style.position !== 'absolute') {\n      element.style.position = 'absolute';\n    }\n\n    element.style.visibility = 'hidden';\n\n    setTimeout(() => {\n      this.setElementPosition(config);\n\n      element.style.visibility = 'visible';\n    });\n  }\n\n  setElementPosition({element, container, anchor, dimElem, drops, opens}: IAppendToArgs) {\n    DomHelper.setYAxisPosition(element, container, anchor, 'down');\n    DomHelper.setXAxisPosition(element, container, anchor, dimElem, 'right');\n\n    if (drops !== 'down' && drops !== 'up') {\n      if (DomHelper.isBottomInView(dimElem)) {\n        DomHelper.setYAxisPosition(element, container, anchor, 'down');\n      } else if (DomHelper.isTopInView(dimElem)) {\n        DomHelper.setYAxisPosition(element, container, anchor, 'up');\n      }\n    } else {\n      DomHelper.setYAxisPosition(element, container, anchor, drops);\n    }\n\n    if (opens !== 'left' && opens !== 'right') {\n      if (DomHelper.isRightInView(dimElem)) {\n        DomHelper.setXAxisPosition(element, container, anchor, dimElem, 'right');\n      } else if (DomHelper.isLeftInView(dimElem)) {\n        DomHelper.setXAxisPosition(element, container, anchor, dimElem, 'left');\n      }\n    } else {\n      DomHelper.setXAxisPosition(element, container, anchor, dimElem, opens);\n    }\n  }\n}\n\nexport interface IAppendToArgs {\n  container: HTMLElement;\n  element: HTMLElement;\n  anchor: HTMLElement;\n  dimElem: HTMLElement;\n  drops: TDrops;\n  opens: TOpens;\n}\n","import {ECalendarValue} from '../../types/calendar-value-enum';\nimport {SingleCalendarValue} from '../../types/single-calendar-value';\nimport {Injectable} from '@angular/core';\nimport * as momentNs from 'moment';\nimport {Moment, unitOfTime} from 'moment';\nimport {CalendarValue} from '../../types/calendar-value';\nimport {IDate} from '../../models/date.model';\nimport {CalendarMode} from '../../types/calendar-mode';\nimport {DateValidator} from '../../types/validator.type';\nimport {ICalendarInternal} from '../../models/calendar.model';\n\nconst moment = momentNs;\n\nexport interface DateLimits {\n  minDate?: SingleCalendarValue;\n  maxDate?: SingleCalendarValue;\n  minTime?: SingleCalendarValue;\n  maxTime?: SingleCalendarValue;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n  static debounce(func: Function, wait: number) {\n    let timeout;\n    return function () {\n      const context = this, args = arguments;\n      timeout = clearTimeout(timeout);\n      setTimeout(() => {\n        func.apply(context, args);\n      }, wait);\n    };\n  };\n\n  createArray(size: number): number[] {\n    return new Array(size).fill(1);\n  }\n\n  convertToMoment(date: SingleCalendarValue, format: string): Moment {\n    if (!date) {\n      return null;\n    } else if (typeof date === 'string') {\n      return moment(date, format);\n    } else {\n      return date.clone();\n    }\n  }\n\n  isDateValid(date: string, format: string): boolean {\n    if (date === '') {\n      return true;\n    }\n\n    return moment(date, format, true).isValid();\n  }\n\n  // todo:: add unit test\n  getDefaultDisplayDate(current: Moment,\n                        selected: Moment[],\n                        allowMultiSelect: boolean,\n                        minDate: Moment): Moment {\n    if (current) {\n      return current.clone();\n    } else if (minDate && minDate.isAfter(moment())) {\n      return minDate.clone();\n    } else if (allowMultiSelect) {\n      if (selected && selected[selected.length]) {\n        return selected[selected.length].clone();\n      }\n    } else if (selected && selected[0]) {\n      return selected[0].clone();\n    }\n\n    return moment();\n  }\n\n  // todo:: add unit test\n  getInputType(value: CalendarValue, allowMultiSelect: boolean): ECalendarValue {\n    if (Array.isArray(value)) {\n      if (!value.length) {\n        return ECalendarValue.MomentArr;\n      } else if (typeof value[0] === 'string') {\n        return ECalendarValue.StringArr;\n      } else if (moment.isMoment(value[0])) {\n        return ECalendarValue.MomentArr;\n      }\n    } else {\n      if (typeof value === 'string') {\n        return ECalendarValue.String;\n      } else if (moment.isMoment(value)) {\n        return ECalendarValue.Moment;\n      }\n    }\n\n    return allowMultiSelect ? ECalendarValue.MomentArr : ECalendarValue.Moment;\n  }\n\n  // todo:: add unit test\n  convertToMomentArray(value: CalendarValue,\n                       config: {allowMultiSelect?: boolean, format?: string}): Moment[] {\n    let retVal: Moment[];\n    switch (this.getInputType(value, config.allowMultiSelect)) {\n      case (ECalendarValue.String):\n        retVal = value ? [moment(<string>value, config.format, true)] : [];\n        break;\n      case (ECalendarValue.StringArr):\n        retVal = (<string[]>value).map(v => v ? moment(v, config.format, true) : null).filter(Boolean);\n        break;\n      case (ECalendarValue.Moment):\n        retVal = value ? [(<Moment>value).clone()] : [];\n        break;\n      case (ECalendarValue.MomentArr):\n        retVal = (<Moment[]>value || []).map(v => v.clone());\n        break;\n      default:\n        retVal = [];\n    }\n\n    return retVal;\n  }\n\n  // todo:: add unit test\n  convertFromMomentArray(format: string,\n                         value: Moment[],\n                         convertTo: ECalendarValue): CalendarValue {\n    switch (convertTo) {\n      case (ECalendarValue.String):\n        return value[0] && value[0].format(format);\n      case (ECalendarValue.StringArr):\n        return value.filter(Boolean).map(v => v.format(format));\n      case (ECalendarValue.Moment):\n        return value[0] ? value[0].clone() : value[0];\n      case (ECalendarValue.MomentArr):\n        return value ? value.map(v => v.clone()) : value;\n      default:\n        return value;\n    }\n  }\n\n  convertToString(value: CalendarValue, format: string): string {\n    let tmpVal: string[];\n\n    if (typeof value === 'string') {\n      tmpVal = [value];\n    } else if (Array.isArray(value)) {\n      if (value.length) {\n        tmpVal = (<SingleCalendarValue[]>value).map((v) => {\n          return this.convertToMoment(v, format).format(format);\n        });\n      } else {\n        tmpVal = <string[]>value;\n      }\n    } else if (moment.isMoment(value)) {\n      tmpVal = [value.format(format)];\n    } else {\n      return '';\n    }\n\n    return tmpVal.filter(Boolean).join(' | ');\n  }\n\n  // todo:: add unit test\n  clearUndefined<T>(obj: T): T {\n    if (!obj) {\n      return obj;\n    }\n\n    Object.keys(obj).forEach((key) => (obj[key] === undefined) && delete obj[key]);\n    return obj;\n  }\n\n  updateSelected(isMultiple: boolean,\n                 currentlySelected: Moment[],\n                 date: IDate,\n                 granularity: unitOfTime.Base = 'day'): Moment[] {\n    if (isMultiple) {\n      return !date.selected\n        ? currentlySelected.concat([date.date])\n        : currentlySelected.filter(d => !d.isSame(date.date, granularity));\n    } else {\n      return !date.selected ? [date.date] : [];\n    }\n  }\n\n  closestParent(element: HTMLElement, selector: string): HTMLElement {\n    if (!element) {\n      return undefined;\n    }\n    const match = <HTMLElement>element.querySelector(selector);\n    return match || this.closestParent(element.parentElement, selector);\n  }\n\n  onlyTime(m: Moment): Moment {\n    return m && moment.isMoment(m) && moment(m.format('HH:mm:ss'), 'HH:mm:ss');\n  }\n\n  granularityFromType(calendarType: CalendarMode): unitOfTime.Base {\n    switch (calendarType) {\n      case 'time':\n        return 'second';\n      case 'daytime':\n        return 'second';\n      default:\n        return calendarType;\n    }\n  }\n\n  createValidator({minDate, maxDate, minTime, maxTime}: DateLimits,\n                  format: string,\n                  calendarType: CalendarMode): DateValidator {\n    let isValid: boolean;\n    let value: Moment[];\n    const validators = [];\n    const granularity = this.granularityFromType(calendarType);\n\n    if (minDate) {\n      const md = this.convertToMoment(minDate, format);\n      validators.push({\n        key: 'minDate',\n        isValid: () => {\n          const _isValid = value.every(val => val.isSameOrAfter(md, granularity));\n          isValid = isValid ? _isValid : false;\n          return _isValid;\n        }\n      });\n    }\n\n    if (maxDate) {\n      const md = this.convertToMoment(maxDate, format);\n      validators.push({\n        key: 'maxDate',\n        isValid: () => {\n          const _isValid = value.every(val => val.isSameOrBefore(md, granularity));\n          isValid = isValid ? _isValid : false;\n          return _isValid;\n        }\n      });\n    }\n\n    if (minTime) {\n      const md = this.onlyTime(this.convertToMoment(minTime, format));\n      validators.push({\n        key: 'minTime',\n        isValid: () => {\n          const _isValid = value.every(val => this.onlyTime(val).isSameOrAfter(md));\n          isValid = isValid ? _isValid : false;\n          return _isValid;\n        }\n      });\n    }\n\n    if (maxTime) {\n      const md = this.onlyTime(this.convertToMoment(maxTime, format));\n      validators.push({\n        key: 'maxTime',\n        isValid: () => {\n          const _isValid = value.every(val => this.onlyTime(val).isSameOrBefore(md));\n          isValid = isValid ? _isValid : false;\n          return _isValid;\n        }\n      });\n    }\n\n    return (inputVal: CalendarValue) => {\n      isValid = true;\n\n      value = this.convertToMomentArray(inputVal, {\n        format,\n        allowMultiSelect: true\n      }).filter(Boolean);\n\n      if (!value.every(val => val.isValid())) {\n        return {\n          format: {\n            given: inputVal\n          }\n        };\n      }\n\n      const errors = validators.reduce((map, err) => {\n        if (!err.isValid()) {\n          map[err.key] = {\n            given: value\n          };\n        }\n\n        return map;\n      }, {});\n\n      return !isValid ? errors : null;\n    };\n  }\n\n  datesStringToStringArray(value: string): string[] {\n    return (value || '').split('|').map(m => m.trim()).filter(Boolean);\n  }\n\n  getValidMomentArray(value: string, format: string): Moment[] {\n    return this.datesStringToStringArray(value)\n      .filter(d => this.isDateValid(d, format))\n      .map(d => moment(d, format));\n  }\n\n  shouldShowCurrent(showGoToCurrent: boolean,\n                    mode: CalendarMode,\n                    min: Moment,\n                    max: Moment): boolean {\n    return showGoToCurrent &&\n      mode !== 'time' &&\n      this.isDateInRange(moment(), min, max);\n  }\n\n  isDateInRange(date: Moment, from: Moment, to: Moment): boolean {\n    return date.isBetween(from, to, 'day', '[]');\n  }\n\n  convertPropsToMoment(obj: {[key: string]: any}, format: string, props: string[]) {\n    props.forEach((prop) => {\n      if (obj.hasOwnProperty(prop)) {\n        obj[prop] = this.convertToMoment(obj[prop], format);\n      }\n    });\n  }\n\n  shouldResetCurrentView<T extends ICalendarInternal>(prevConf: T, currentConf: T): boolean {\n    if (prevConf && currentConf) {\n      if (!prevConf.min && currentConf.min) {\n        return true;\n      } else if (prevConf.min && currentConf.min && !prevConf.min.isSame(currentConf.min, 'd')) {\n        return true;\n      } else if (!prevConf.max && currentConf.max) {\n        return true;\n      } else if (prevConf.max && currentConf.max && !prevConf.max.isSame(currentConf.max, 'd')) {\n        return true;\n      }\n\n      return false;\n    }\n\n    return false;\n  }\n\n  getNativeElement(elem: HTMLElement | string): HTMLElement {\n    if (!elem) {\n      return null;\n    } else if (typeof elem === 'string') {\n      return <HTMLElement>document.querySelector(elem);\n    } else {\n      return elem;\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport * as momentNs from 'moment';\nimport {Moment} from 'moment';\nimport {WeekDays} from '../common/types/week-days.type';\nimport {UtilsService} from '../common/services/utils/utils.service';\nimport {IDay} from './day.model';\nimport {IDayCalendarConfig, IDayCalendarConfigInternal} from './day-calendar-config.model';\nimport {IMonthCalendarConfig} from '../month-calendar/month-calendar-config';\n\nconst moment = momentNs;\n\n@Injectable()\nexport class DayCalendarService {\n  readonly DEFAULT_CONFIG: IDayCalendarConfig = {\n    showNearMonthDays: true,\n    showWeekNumbers: false,\n    firstDayOfWeek: 'su',\n    weekDayFormat: 'ddd',\n    format: 'DD-MM-YYYY',\n    allowMultiSelect: false,\n    monthFormat: 'MMM, YYYY',\n    enableMonthSelector: true,\n    locale: moment.locale(),\n    dayBtnFormat: 'DD',\n    unSelectOnClick: true\n  };\n  private readonly DAYS = ['su', 'mo', 'tu', 'we', 'th', 'fr', 'sa'];\n\n  constructor(private utilsService: UtilsService) {\n  }\n\n  getConfig(config: IDayCalendarConfig): IDayCalendarConfigInternal {\n    const _config = <IDayCalendarConfigInternal>{\n      ...this.DEFAULT_CONFIG,\n      ...this.utilsService.clearUndefined(config)\n    };\n\n    this.utilsService.convertPropsToMoment(_config, _config.format, ['min', 'max']);\n\n    moment.locale(_config.locale);\n\n    return _config;\n  }\n\n  generateDaysMap(firstDayOfWeek: WeekDays) {\n    const firstDayIndex = this.DAYS.indexOf(firstDayOfWeek);\n    const daysArr = this.DAYS.slice(firstDayIndex, 7).concat(this.DAYS.slice(0, firstDayIndex));\n    return daysArr.reduce((map, day, index) => {\n      map[day] = index;\n\n      return map;\n    }, <{[key: string]: number}>{});\n  }\n\n  generateMonthArray(config: IDayCalendarConfigInternal, month: Moment, selected: Moment[]): IDay[][] {\n    let monthArray: IDay[][] = [];\n    const firstDayOfWeekIndex = this.DAYS.indexOf(config.firstDayOfWeek);\n    const firstDayOfBoard = month.clone().startOf('month');\n\n    while (firstDayOfBoard.day() !== firstDayOfWeekIndex) {\n      firstDayOfBoard.subtract(1, 'day');\n    }\n\n    const current = firstDayOfBoard.clone();\n    const prevMonth = month.clone().subtract(1, 'month');\n    const nextMonth = month.clone().add(1, 'month');\n    const today = moment();\n\n    const daysOfCalendar: IDay[] = this.utilsService.createArray(42)\n      .reduce((array: IDay[]) => {\n        array.push({\n          date: current.clone(),\n          selected: !!selected.find(selectedDay => current.isSame(selectedDay, 'day')),\n          currentMonth: current.isSame(month, 'month'),\n          prevMonth: current.isSame(prevMonth, 'month'),\n          nextMonth: current.isSame(nextMonth, 'month'),\n          currentDay: current.isSame(today, 'day'),\n          disabled: this.isDateDisabled(current, config)\n        });\n        current.add(1, 'day');\n\n        return array;\n      }, []);\n\n    daysOfCalendar.forEach((day, index) => {\n      const weekIndex = Math.floor(index / 7);\n\n      if (!monthArray[weekIndex]) {\n        monthArray.push([]);\n      }\n\n      monthArray[weekIndex].push(day);\n    });\n\n    if (!config.showNearMonthDays) {\n      monthArray = this.removeNearMonthWeeks(month, monthArray);\n    }\n\n    return monthArray;\n  }\n\n  generateWeekdays(firstDayOfWeek: WeekDays): Moment[] {\n    const weekdayNames: {[key: string]: Moment} = {\n      su: moment().day(0),\n      mo: moment().day(1),\n      tu: moment().day(2),\n      we: moment().day(3),\n      th: moment().day(4),\n      fr: moment().day(5),\n      sa: moment().day(6)\n    };\n    const weekdays: Moment[] = [];\n    const daysMap = this.generateDaysMap(firstDayOfWeek);\n\n    for (const dayKey in daysMap) {\n      if (daysMap.hasOwnProperty(dayKey)) {\n        weekdays[daysMap[dayKey]] = weekdayNames[dayKey];\n      }\n    }\n\n    return weekdays;\n  }\n\n  isDateDisabled(date: Moment, config: IDayCalendarConfigInternal): boolean {\n    if (config.isDayDisabledCallback) {\n      return config.isDayDisabledCallback(date);\n    }\n\n    if (config.min && date.isBefore(config.min, 'day')) {\n      return true;\n    }\n\n    return !!(config.max && date.isAfter(config.max, 'day'));\n  }\n\n  // todo:: add unit tests\n  getHeaderLabel(config: IDayCalendarConfigInternal, month: Moment): string {\n    if (config.monthFormatter) {\n      return config.monthFormatter(month);\n    }\n\n    return month.format(config.monthFormat);\n  }\n\n  // todo:: add unit tests\n  shouldShowLeft(min: Moment, currentMonthView: Moment): boolean {\n    return min ? min.isBefore(currentMonthView, 'month') : true;\n  }\n\n  // todo:: add unit tests\n  shouldShowRight(max: Moment, currentMonthView: Moment): boolean {\n    return max ? max.isAfter(currentMonthView, 'month') : true;\n  }\n\n  generateDaysIndexMap(firstDayOfWeek: WeekDays) {\n    const firstDayIndex = this.DAYS.indexOf(firstDayOfWeek);\n    const daysArr = this.DAYS.slice(firstDayIndex, 7).concat(this.DAYS.slice(0, firstDayIndex));\n    return daysArr.reduce((map, day, index) => {\n      map[index] = day;\n\n      return map;\n    }, <{[key: number]: string}>{});\n  }\n\n  getMonthCalendarConfig(componentConfig: IDayCalendarConfigInternal): IMonthCalendarConfig {\n    return this.utilsService.clearUndefined({\n      min: componentConfig.min,\n      max: componentConfig.max,\n      format: componentConfig.format,\n      isNavHeaderBtnClickable: true,\n      allowMultiSelect: false,\n      locale: componentConfig.locale,\n      yearFormat: componentConfig.yearFormat,\n      yearFormatter: componentConfig.yearFormatter,\n      monthBtnFormat: componentConfig.monthBtnFormat,\n      monthBtnFormatter: componentConfig.monthBtnFormatter,\n      monthBtnCssClassCallback: componentConfig.monthBtnCssClassCallback,\n      isMonthDisabledCallback: componentConfig.isMonthDisabledCallback,\n      multipleYearsNavigateBy: componentConfig.multipleYearsNavigateBy,\n      showMultipleYearsNavigation: componentConfig.showMultipleYearsNavigation,\n      showGoToCurrent: componentConfig.showGoToCurrent,\n      numOfMonthRows: componentConfig.numOfMonthRows\n    });\n  }\n\n  getDayBtnText(config: IDayCalendarConfigInternal, day: Moment): string {\n    if (config.dayBtnFormatter) {\n      return config.dayBtnFormatter(day);\n    }\n\n    return day.format(config.dayBtnFormat);\n  }\n\n  getDayBtnCssClass(config: IDayCalendarConfigInternal, day: Moment): string {\n    if (config.dayBtnCssClassCallback) {\n      return config.dayBtnCssClassCallback(day);\n    }\n\n    return '';\n  }\n\n  private removeNearMonthWeeks(currentMonth: Moment, monthArray: IDay[][]): IDay[][] {\n    if (monthArray[monthArray.length - 1].find((day) => day.date.isSame(currentMonth, 'month'))) {\n      return monthArray;\n    } else {\n      return monthArray.slice(0, -1);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport * as momentNs from 'moment';\nimport {Moment} from 'moment';\nimport {UtilsService} from '../common/services/utils/utils.service';\nimport {ITimeSelectConfig, ITimeSelectConfigInternal} from './time-select-config.model';\n\nconst moment = momentNs;\n\nexport type TimeUnit = 'hour' | 'minute' | 'second';\nexport const FIRST_PM_HOUR = 12;\n\n@Injectable()\nexport class TimeSelectService {\n  readonly DEFAULT_CONFIG: ITimeSelectConfigInternal = {\n    hours12Format: 'hh',\n    hours24Format: 'HH',\n    meridiemFormat: 'A',\n    minutesFormat: 'mm',\n    minutesInterval: 1,\n    secondsFormat: 'ss',\n    secondsInterval: 1,\n    showSeconds: false,\n    showTwentyFourHours: false,\n    timeSeparator: ':',\n    locale: moment.locale()\n  };\n\n  constructor(private readonly utilsService: UtilsService) {\n  }\n\n  getConfig(config: ITimeSelectConfig): ITimeSelectConfigInternal {\n    const timeConfigs = {\n      maxTime: this.utilsService.onlyTime(config && config.maxTime),\n      minTime: this.utilsService.onlyTime(config && config.minTime)\n    };\n\n    const _config = <ITimeSelectConfigInternal>{\n      ...this.DEFAULT_CONFIG,\n      ...this.utilsService.clearUndefined(config),\n      ...timeConfigs\n    };\n\n    moment.locale(_config.locale);\n\n    return _config;\n  }\n\n  getTimeFormat(config: ITimeSelectConfigInternal): string {\n    return (config.showTwentyFourHours ? config.hours24Format : config.hours12Format)\n      + config.timeSeparator + config.minutesFormat\n      + (config.showSeconds ? (config.timeSeparator + config.secondsFormat) : '')\n      + (config.showTwentyFourHours ? '' : ' ' + config.meridiemFormat);\n  }\n\n  getHours(config: ITimeSelectConfigInternal, t: Moment | null): string {\n    const time = t || moment();\n    return time && time.format(config.showTwentyFourHours ? config.hours24Format : config.hours12Format);\n  }\n\n  getMinutes(config: ITimeSelectConfigInternal, t: Moment | null): string {\n    const time = t || moment();\n    return time && time.format(config.minutesFormat);\n  }\n\n  getSeconds(config: ITimeSelectConfigInternal, t: Moment | null): string {\n    const time = t || moment();\n    return time && time.format(config.secondsFormat);\n  }\n\n  getMeridiem(config: ITimeSelectConfigInternal, time: Moment): string {\n    return time && time.format(config.meridiemFormat);\n  }\n\n  decrease(config: ITimeSelectConfigInternal, time: Moment, unit: TimeUnit): Moment {\n    let amount: number = 1;\n    switch (unit) {\n      case 'minute':\n        amount = config.minutesInterval;\n        break;\n      case 'second':\n        amount = config.secondsInterval;\n        break;\n    }\n    return time.clone().subtract(amount, unit);\n  }\n\n  increase(config: ITimeSelectConfigInternal, time: Moment, unit: TimeUnit): Moment {\n    let amount: number = 1;\n    switch (unit) {\n      case 'minute':\n        amount = config.minutesInterval;\n        break;\n      case 'second':\n        amount = config.secondsInterval;\n        break;\n    }\n    return time.clone().add(amount, unit);\n  }\n\n  toggleMeridiem(time: Moment): Moment {\n    if (time.hours() < FIRST_PM_HOUR) {\n      return time.clone().add(12, 'hour');\n    } else {\n      return time.clone().subtract(12, 'hour');\n    }\n  }\n\n  shouldShowDecrease(config: ITimeSelectConfigInternal, time: Moment, unit: TimeUnit): boolean {\n    if (!config.min && !config.minTime) {\n      return true;\n    }\n    const newTime = this.decrease(config, time, unit);\n\n    return (!config.min || config.min.isSameOrBefore(newTime))\n      && (!config.minTime || config.minTime.isSameOrBefore(this.utilsService.onlyTime(newTime)));\n  }\n\n  shouldShowIncrease(config: ITimeSelectConfigInternal, time: Moment, unit: TimeUnit): boolean {\n    if (!config.max && !config.maxTime) {\n      return true;\n    }\n    const newTime = this.increase(config, time, unit);\n\n    return (!config.max || config.max.isSameOrAfter(newTime))\n      && (!config.maxTime || config.maxTime.isSameOrAfter(this.utilsService.onlyTime(newTime)));\n  }\n\n  shouldShowToggleMeridiem(config: ITimeSelectConfigInternal, time: Moment): boolean {\n    if (!config.min && !config.max && !config.minTime && !config.maxTime) {\n      return true;\n    }\n    const newTime = this.toggleMeridiem(time);\n    return (!config.max || config.max.isSameOrAfter(newTime))\n      && (!config.min || config.min.isSameOrBefore(newTime))\n      && (!config.maxTime || config.maxTime.isSameOrAfter(this.utilsService.onlyTime(newTime)))\n      && (!config.minTime || config.minTime.isSameOrBefore(this.utilsService.onlyTime(newTime)));\n  }\n}\n","import {Injectable} from '@angular/core';\nimport * as momentNs from 'moment';\nimport {Moment} from 'moment';\n\nimport {UtilsService} from '../common/services/utils/utils.service';\nimport {DayCalendarService} from '../day-calendar/day-calendar.service';\nimport {TimeSelectService} from '../time-select/time-select.service';\nimport {IDayTimeCalendarConfig} from './day-time-calendar-config.model';\n\nconst moment = momentNs;\n\nconst DAY_FORMAT = 'YYYYMMDD';\nconst TIME_FORMAT = 'HH:mm:ss';\nconst COMBINED_FORMAT = DAY_FORMAT + TIME_FORMAT;\n\n@Injectable()\nexport class DayTimeCalendarService {\n  readonly DEFAULT_CONFIG: IDayTimeCalendarConfig = {\n    locale: moment.locale()\n  };\n\n  constructor(private utilsService: UtilsService,\n              private dayCalendarService: DayCalendarService,\n              private timeSelectService: TimeSelectService) {\n  }\n\n  getConfig(config: IDayTimeCalendarConfig): IDayTimeCalendarConfig {\n    const _config = {\n      ...this.DEFAULT_CONFIG,\n      ...this.timeSelectService.getConfig(config),\n      ...this.dayCalendarService.getConfig(config)\n    };\n\n    moment.locale(config.locale);\n\n    return _config;\n  }\n\n  updateDay(current: Moment, day: Moment, config: IDayTimeCalendarConfig): Moment {\n    const time = current ? current : moment();\n    let updated = moment(day.format(DAY_FORMAT) + time.format(TIME_FORMAT), COMBINED_FORMAT);\n\n    if (config.min) {\n      const min = <Moment>config.min;\n      updated = min.isAfter(updated) ? min : updated;\n    }\n\n    if (config.max) {\n      const max = <Moment>config.max;\n      updated = max.isBefore(updated) ? max : updated;\n    }\n\n    return updated;\n  }\n\n  updateTime(current: Moment, time: Moment): Moment {\n    const day = current ? current : moment();\n\n    return moment(day.format(DAY_FORMAT) + time.format(TIME_FORMAT), COMBINED_FORMAT);\n  }\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {IDatePickerConfig, IDatePickerConfigInternal} from './date-picker-config.model';\nimport * as momentNs from 'moment';\nimport {Moment} from 'moment';\nimport {UtilsService} from '../common/services/utils/utils.service';\nimport {IDayCalendarConfig} from '../day-calendar/day-calendar-config.model';\nimport {TimeSelectService} from '../time-select/time-select.service';\nimport {DayTimeCalendarService} from '../day-time-calendar/day-time-calendar.service';\nimport {ITimeSelectConfig} from '../time-select/time-select-config.model';\nimport {CalendarMode} from '../common/types/calendar-mode';\n\nconst moment = momentNs;\n\n@Injectable()\nexport class DatePickerService {\n  readonly onPickerClosed: EventEmitter<null> = new EventEmitter();\n  private defaultConfig: IDatePickerConfigInternal = {\n    closeOnSelect: true,\n    closeOnSelectDelay: 100,\n    closeOnEnter: true,\n    format: 'DD-MM-YYYY',\n    openOnFocus: true,\n    openOnClick: true,\n    onOpenDelay: 0,\n    disableKeypress: false,\n    showNearMonthDays: true,\n    showWeekNumbers: false,\n    enableMonthSelector: true,\n    showGoToCurrent: true,\n    locale: moment.locale(),\n    hideOnOutsideClick: true\n  };\n\n  constructor(private utilsService: UtilsService,\n              private timeSelectService: TimeSelectService,\n              private daytimeCalendarService: DayTimeCalendarService) {\n  }\n\n  // todo:: add unit tests\n  getConfig(config: IDatePickerConfig, mode: CalendarMode = 'daytime'): IDatePickerConfigInternal {\n    const _config = <IDatePickerConfigInternal>{\n      ...this.defaultConfig,\n      format: this.getDefaultFormatByMode(mode),\n      ...this.utilsService.clearUndefined(config)\n    };\n\n    this.utilsService.convertPropsToMoment(_config, _config.format, ['min', 'max']);\n\n    if (config && config.allowMultiSelect && config.closeOnSelect === undefined) {\n      _config.closeOnSelect = false;\n    }\n\n    moment.locale(_config.locale);\n\n    return _config;\n  }\n\n  getDayConfigService(pickerConfig: IDatePickerConfig): IDayCalendarConfig {\n    return {\n      min: pickerConfig.min,\n      max: pickerConfig.max,\n      isDayDisabledCallback: pickerConfig.isDayDisabledCallback,\n      weekDayFormat: pickerConfig.weekDayFormat,\n      weekDayFormatter: pickerConfig.weekDayFormatter,\n      showNearMonthDays: pickerConfig.showNearMonthDays,\n      showWeekNumbers: pickerConfig.showWeekNumbers,\n      firstDayOfWeek: pickerConfig.firstDayOfWeek,\n      format: pickerConfig.format,\n      allowMultiSelect: pickerConfig.allowMultiSelect,\n      monthFormat: pickerConfig.monthFormat,\n      monthFormatter: pickerConfig.monthFormatter,\n      enableMonthSelector: pickerConfig.enableMonthSelector,\n      yearFormat: pickerConfig.yearFormat,\n      yearFormatter: pickerConfig.yearFormatter,\n      dayBtnFormat: pickerConfig.dayBtnFormat,\n      dayBtnFormatter: pickerConfig.dayBtnFormatter,\n      dayBtnCssClassCallback: pickerConfig.dayBtnCssClassCallback,\n      monthBtnFormat: pickerConfig.monthBtnFormat,\n      monthBtnFormatter: pickerConfig.monthBtnFormatter,\n      monthBtnCssClassCallback: pickerConfig.monthBtnCssClassCallback,\n      isMonthDisabledCallback: pickerConfig.isMonthDisabledCallback,\n      multipleYearsNavigateBy: pickerConfig.multipleYearsNavigateBy,\n      showMultipleYearsNavigation: pickerConfig.showMultipleYearsNavigation,\n      locale: pickerConfig.locale,\n      returnedValueType: pickerConfig.returnedValueType,\n      showGoToCurrent: pickerConfig.showGoToCurrent,\n      unSelectOnClick: pickerConfig.unSelectOnClick,\n      numOfMonthRows: pickerConfig.numOfMonthRows\n    };\n  }\n\n  getDayTimeConfigService(pickerConfig: IDatePickerConfig): ITimeSelectConfig {\n    return this.daytimeCalendarService.getConfig(pickerConfig);\n  }\n\n  getTimeConfigService(pickerConfig: IDatePickerConfig): ITimeSelectConfig {\n    return this.timeSelectService.getConfig(pickerConfig);\n  }\n\n  pickerClosed() {\n    this.onPickerClosed.emit();\n  }\n\n  // todo:: add unit tests\n  isValidInputDateValue(value: string, config: IDatePickerConfig): boolean {\n    value = value ? value : '';\n    const datesStrArr: string[] = this.utilsService.datesStringToStringArray(value);\n\n    return datesStrArr.every(date => this.utilsService.isDateValid(date, config.format));\n  }\n\n  // todo:: add unit tests\n  convertInputValueToMomentArray(value: string, config: IDatePickerConfig): Moment[] {\n    value = value ? value : '';\n    const datesStrArr: string[] = this.utilsService.datesStringToStringArray(value);\n\n    return this.utilsService.convertToMomentArray(datesStrArr, config);\n  }\n\n  private getDefaultFormatByMode(mode: CalendarMode): string {\n    switch (mode) {\n      case 'day':\n        return 'DD-MM-YYYY';\n      case 'daytime':\n        return 'DD-MM-YYYY HH:mm:ss';\n      case 'time':\n        return 'HH:mm:ss';\n      case 'month':\n        return 'MMM, YYYY';\n    }\n  }\n}\n","import {IDate} from '../common/models/date.model';\nimport {DomHelper} from '../common/services/dom-appender/dom-appender.service';\nimport {UtilsService} from '../common/services/utils/utils.service';\nimport {CalendarMode} from '../common/types/calendar-mode';\nimport {ECalendarMode} from '../common/types/calendar-mode-enum';\nimport {CalendarValue} from '../common/types/calendar-value';\nimport {ECalendarValue} from '../common/types/calendar-value-enum';\nimport {SingleCalendarValue} from '../common/types/single-calendar-value';\nimport {IDayCalendarConfig} from '../day-calendar/day-calendar-config.model';\nimport {DayCalendarComponent} from '../day-calendar/day-calendar.component';\nimport {DayCalendarService} from '../day-calendar/day-calendar.service';\nimport {IDayTimeCalendarConfig} from '../day-time-calendar/day-time-calendar-config.model';\nimport {DayTimeCalendarService} from '../day-time-calendar/day-time-calendar.service';\nimport {ITimeSelectConfig} from '../time-select/time-select-config.model';\nimport {TimeSelectComponent} from '../time-select/time-select.component';\nimport {TimeSelectService} from '../time-select/time-select.service';\nimport {IDatePickerConfig, IDatePickerConfigInternal} from './date-picker-config.model';\nimport {IDpDayPickerApi} from './date-picker.api';\nimport {DatePickerService} from './date-picker.service';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator\n} from '@angular/forms';\nimport {Moment, unitOfTime} from 'moment';\nimport {DateValidator} from '../common/types/validator.type';\nimport {MonthCalendarComponent} from '../month-calendar/month-calendar.component';\nimport {DayTimeCalendarComponent} from '../day-time-calendar/day-time-calendar.component';\nimport {INavEvent} from '../common/models/navigation-event.model';\nimport {SelectEvent} from '../common/types/selection-event.enum';\nimport {ISelectionEvent} from '../common/types/selection-event.model';\n\n@Component({\n  selector: 'dp-date-picker',\n  templateUrl: 'date-picker.component.html',\n  styleUrls: ['date-picker.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    DatePickerService,\n    DayTimeCalendarService,\n    DayCalendarService,\n    TimeSelectService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnChanges,\n                                            OnInit,\n                                            AfterViewInit,\n                                            ControlValueAccessor,\n                                            Validator,\n                                            OnDestroy {\n\n  isInitialized: boolean = false;\n  @Input() config: IDatePickerConfig;\n  @Input() mode: CalendarMode = 'day';\n  @Input() placeholder: string = '';\n  @Input() disabled: boolean = false;\n  @Input() displayDate: SingleCalendarValue;\n  @HostBinding('class') @Input() theme: string;\n  @Input() minDate: SingleCalendarValue;\n  @Input() maxDate: SingleCalendarValue;\n  @Input() minTime: SingleCalendarValue;\n  @Input() maxTime: SingleCalendarValue;\n  @Output() open = new EventEmitter<void>();\n  @Output() close = new EventEmitter<void>();\n  @Output() onChange = new EventEmitter<CalendarValue>();\n  @Output() onGoToCurrent: EventEmitter<void> = new EventEmitter();\n  @Output() onLeftNav: EventEmitter<INavEvent> = new EventEmitter();\n  @Output() onRightNav: EventEmitter<INavEvent> = new EventEmitter();\n  @Output() onSelect: EventEmitter<ISelectionEvent> = new EventEmitter();\n  @ViewChild('container') calendarContainer: ElementRef;\n  @ViewChild('dayCalendar') dayCalendarRef: DayCalendarComponent;\n  @ViewChild('monthCalendar') monthCalendarRef: MonthCalendarComponent;\n  @ViewChild('daytimeCalendar') dayTimeCalendarRef: DayTimeCalendarComponent;\n  @ViewChild('timeSelect') timeSelectRef: TimeSelectComponent;\n  componentConfig: IDatePickerConfigInternal;\n  dayCalendarConfig: IDayCalendarConfig;\n  dayTimeCalendarConfig: IDayTimeCalendarConfig;\n  timeSelectConfig: ITimeSelectConfig;\n  hideStateHelper: boolean = false;\n  inputValue: CalendarValue;\n  isFocusedTrigger: boolean = false;\n  inputElementValue: string;\n  calendarWrapper: HTMLElement;\n  appendToElement: HTMLElement;\n  inputElementContainer: HTMLElement;\n  popupElem: HTMLElement;\n  handleInnerElementClickUnlisteners: Function[] = [];\n  globalListenersUnlisteners: Function[] = [];\n  validateFn: DateValidator;\n  api: IDpDayPickerApi = {\n    open: this.showCalendars.bind(this),\n    close: this.hideCalendar.bind(this),\n    moveCalendarTo: this.moveCalendarTo.bind(this)\n  };\n  selectEvent = SelectEvent;\n  private onOpenDelayTimeoutHandler;\n\n  constructor(private readonly dayPickerService: DatePickerService,\n              private readonly domHelper: DomHelper,\n              private readonly elemRef: ElementRef,\n              private readonly renderer: Renderer2,\n              private readonly utilsService: UtilsService,\n              public readonly cd: ChangeDetectorRef) {\n  }\n\n  get openOnFocus(): boolean {\n    return this.componentConfig.openOnFocus;\n  }\n\n  get openOnClick(): boolean {\n    return this.componentConfig.openOnClick;\n  }\n\n  _areCalendarsShown: boolean = false;\n\n  get areCalendarsShown(): boolean {\n    return this._areCalendarsShown;\n  }\n\n  set areCalendarsShown(value: boolean) {\n    if (value) {\n      this.startGlobalListeners();\n      this.domHelper.appendElementToPosition({\n        container: this.appendToElement,\n        element: this.calendarWrapper,\n        anchor: this.inputElementContainer,\n        dimElem: this.popupElem,\n        drops: this.componentConfig.drops,\n        opens: this.componentConfig.opens\n      });\n    } else {\n      this.stopGlobalListeners();\n      this.dayPickerService.pickerClosed();\n    }\n\n    this._areCalendarsShown = value;\n  }\n\n  _selected: Moment[] = [];\n\n  get selected(): Moment[] {\n    return this._selected;\n  }\n\n  set selected(selected: Moment[]) {\n    this._selected = selected;\n    this.inputElementValue = (<string[]>this.utilsService\n      .convertFromMomentArray(this.componentConfig.format, selected, ECalendarValue.StringArr))\n      .join(' | ');\n    const val = this.processOnChangeCallback(selected);\n    this.onChangeCallback(val, false);\n    this.onChange.emit(val);\n  }\n\n  _currentDateView: Moment;\n\n  get currentDateView(): Moment {\n    return this._currentDateView;\n  }\n\n  set currentDateView(date: Moment) {\n    this._currentDateView = date;\n\n    if (this.dayCalendarRef) {\n      this.dayCalendarRef.moveCalendarTo(date);\n    }\n\n    if (this.monthCalendarRef) {\n      this.monthCalendarRef.moveCalendarTo(date);\n    }\n\n    if (this.dayTimeCalendarRef) {\n      this.dayTimeCalendarRef.moveCalendarTo(date);\n    }\n  }\n\n  @HostListener('click')\n  onClick() {\n    if (!this.openOnClick) {\n      return;\n    }\n\n    if (!this.isFocusedTrigger && !this.disabled) {\n      this.hideStateHelper = true;\n      if (!this.areCalendarsShown) {\n        this.showCalendars();\n      }\n    }\n  }\n\n  onBodyClick() {\n    if (this.componentConfig.hideOnOutsideClick) {\n      if (!this.hideStateHelper && this.areCalendarsShown) {\n        this.hideCalendar();\n      }\n\n      this.hideStateHelper = false;\n    }\n  }\n\n  @HostListener('window:resize')\n  onScroll() {\n    if (this.areCalendarsShown) {\n      this.domHelper.setElementPosition({\n        container: this.appendToElement,\n        element: this.calendarWrapper,\n        anchor: this.inputElementContainer,\n        dimElem: this.popupElem,\n        drops: this.componentConfig.drops,\n        opens: this.componentConfig.opens\n      });\n    }\n  }\n\n  writeValue(value: CalendarValue): void {\n    this.inputValue = value;\n\n    if (value || value === '') {\n      this.selected = this.utilsService\n        .convertToMomentArray(value, this.componentConfig);\n      this.init();\n    } else {\n      this.selected = [];\n    }\n\n    this.cd.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  onChangeCallback(_: any, changedByInput: boolean) {\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  onTouchedCallback() {\n  }\n\n  validate(formControl: FormControl): ValidationErrors {\n    return this.validateFn(formControl.value);\n  }\n\n  processOnChangeCallback(selected: Moment[] | string): CalendarValue {\n    if (typeof selected === 'string') {\n      return selected;\n    } else {\n      return this.utilsService.convertFromMomentArray(\n        this.componentConfig.format,\n        selected,\n        this.componentConfig.returnedValueType || this.utilsService.getInputType(this.inputValue, this.componentConfig.allowMultiSelect)\n      );\n    }\n  }\n\n  initValidators(): void {\n    this.validateFn = this.utilsService.createValidator(\n      {\n        minDate: this.minDate,\n        maxDate: this.maxDate,\n        minTime: this.minTime,\n        maxTime: this.maxTime\n      }, this.componentConfig.format, this.mode);\n\n    this.onChangeCallback(this.processOnChangeCallback(this.selected), false);\n  }\n\n  ngOnInit(): void {\n    this.isInitialized = true;\n    this.init();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.isInitialized) {\n      this.init();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.setElementPositionInDom();\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.cd.markForCheck();\n  }\n\n  setElementPositionInDom(): void {\n    this.calendarWrapper = <HTMLElement>this.calendarContainer.nativeElement;\n    this.setInputElementContainer();\n    this.popupElem = this.elemRef.nativeElement.querySelector('.dp-popup');\n    this.handleInnerElementClick(this.popupElem);\n\n    const {appendTo} = this.componentConfig;\n    if (appendTo) {\n      if (typeof appendTo === 'string') {\n        this.appendToElement = <HTMLElement>document.querySelector(<string>appendTo);\n      } else {\n        this.appendToElement = <HTMLElement>appendTo;\n      }\n    } else {\n      this.appendToElement = this.elemRef.nativeElement;\n    }\n\n    this.appendToElement.appendChild(this.calendarWrapper);\n  }\n\n  setInputElementContainer() {\n    this.inputElementContainer = this.utilsService.getNativeElement(this.componentConfig.inputElementContainer)\n      || this.elemRef.nativeElement.querySelector('.dp-input-container')\n      || document.body;\n  }\n\n  handleInnerElementClick(element: HTMLElement) {\n    this.handleInnerElementClickUnlisteners.push(\n      this.renderer.listen(element, 'click', () => {\n        this.hideStateHelper = true;\n      })\n    );\n  }\n\n  init() {\n    this.componentConfig = this.dayPickerService.getConfig(this.config, this.mode);\n    this.currentDateView = this.displayDate\n      ? this.utilsService.convertToMoment(this.displayDate, this.componentConfig.format).clone()\n      : this.utilsService\n        .getDefaultDisplayDate(\n          this.currentDateView,\n          this.selected,\n          this.componentConfig.allowMultiSelect,\n          this.componentConfig.min\n        );\n    this.dayCalendarConfig = this.dayPickerService.getDayConfigService(this.componentConfig);\n    this.dayTimeCalendarConfig = this.dayPickerService.getDayTimeConfigService(this.componentConfig);\n    this.timeSelectConfig = this.dayPickerService.getTimeConfigService(this.componentConfig);\n    this.initValidators();\n  }\n\n  inputFocused() {\n    if (!this.openOnFocus) {\n      return;\n    }\n\n    clearTimeout(this.onOpenDelayTimeoutHandler);\n    this.isFocusedTrigger = true;\n    this.onOpenDelayTimeoutHandler = setTimeout(() => {\n      if (!this.areCalendarsShown) {\n        this.showCalendars();\n      }\n\n      this.hideStateHelper = false;\n\n      this.isFocusedTrigger = false;\n      this.cd.markForCheck();\n    }, this.componentConfig.onOpenDelay);\n  }\n\n  inputBlurred() {\n    clearTimeout(this.onOpenDelayTimeoutHandler);\n    this.onTouchedCallback();\n  }\n\n  showCalendars() {\n    this.hideStateHelper = true;\n    this.areCalendarsShown = true;\n\n    if (this.timeSelectRef) {\n      this.timeSelectRef.api.triggerChange();\n    }\n\n    this.open.emit();\n    this.cd.markForCheck();\n  }\n\n  hideCalendar() {\n    this.areCalendarsShown = false;\n\n    if (this.dayCalendarRef) {\n      this.dayCalendarRef.api.toggleCalendarMode(ECalendarMode.Day);\n    }\n\n    this.close.emit();\n    this.cd.markForCheck();\n  }\n\n  onViewDateChange(value: CalendarValue) {\n    const strVal = value ? this.utilsService.convertToString(value, this.componentConfig.format) : '';\n    if (this.dayPickerService.isValidInputDateValue(strVal, this.componentConfig)) {\n      this.selected = this.dayPickerService.convertInputValueToMomentArray(strVal, this.componentConfig);\n      this.currentDateView = this.selected.length\n        ? this.utilsService.getDefaultDisplayDate(\n          null,\n          this.selected,\n          this.componentConfig.allowMultiSelect,\n          this.componentConfig.min\n        )\n        : this.currentDateView;\n\n      this.onSelect.emit({\n        date: strVal,\n        type: SelectEvent.INPUT,\n        granularity: null\n      })\n    } else {\n      this._selected = this.utilsService\n        .getValidMomentArray(strVal, this.componentConfig.format);\n      this.onChangeCallback(this.processOnChangeCallback(strVal), true);\n    }\n  }\n\n  dateSelected(date: IDate, granularity: unitOfTime.Base, type: SelectEvent, ignoreClose?: boolean) {\n    this.selected = this.utilsService\n      .updateSelected(this.componentConfig.allowMultiSelect, this.selected, date, granularity);\n    if (!ignoreClose) {\n      this.onDateClick();\n    }\n\n    this.onSelect.emit({\n      date: date.date,\n      granularity,\n      type\n    });\n  }\n\n  onDateClick() {\n    if (this.componentConfig.closeOnSelect) {\n      setTimeout(this.hideCalendar.bind(this), this.componentConfig.closeOnSelectDelay);\n    }\n  }\n\n  onKeyPress(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case (9):\n      case (27):\n        this.hideCalendar();\n        break;\n    }\n  }\n\n  moveCalendarTo(date: SingleCalendarValue) {\n    const momentDate = this.utilsService.convertToMoment(date, this.componentConfig.format);\n    this.currentDateView = momentDate;\n  }\n\n  onLeftNavClick(change: INavEvent) {\n    this.onLeftNav.emit(change);\n  }\n\n  onRightNavClick(change: INavEvent) {\n    this.onRightNav.emit(change);\n  }\n\n  startGlobalListeners() {\n    this.globalListenersUnlisteners.push(\n      this.renderer.listen(document, 'keydown', (e: KeyboardEvent) => {\n        this.onKeyPress(e);\n      }),\n      this.renderer.listen(document, 'scroll', () => {\n        this.onScroll();\n      }),\n      this.renderer.listen(document, 'click', () => {\n        this.onBodyClick();\n      })\n    );\n  }\n\n  stopGlobalListeners() {\n    this.globalListenersUnlisteners.forEach((ul) => ul());\n    this.globalListenersUnlisteners = [];\n  }\n\n  ngOnDestroy() {\n    this.handleInnerElementClickUnlisteners.forEach(ul => ul());\n\n    if (this.appendToElement) {\n      this.appendToElement.removeChild(this.calendarWrapper);\n    }\n  }\n}\n","import {UtilsService} from '../common/services/utils/utils.service';\nimport {IDatePickerDirectiveConfig} from './date-picker-directive-config.model';\nimport {ElementRef, Injectable} from '@angular/core';\n\n@Injectable()\nexport class DatePickerDirectiveService {\n  constructor(public utilsService: UtilsService) {\n  }\n\n  convertToHTMLElement(attachTo: ElementRef | string, baseElement: HTMLElement): HTMLElement {\n    if (typeof attachTo === 'string') {\n      return this.utilsService.closestParent(baseElement, attachTo);\n    } else if (attachTo) {\n      return attachTo.nativeElement;\n    }\n\n    return undefined;\n  }\n\n  getConfig(config: IDatePickerDirectiveConfig = {},\n            baseElement?: ElementRef,\n            attachTo?: ElementRef | string): IDatePickerDirectiveConfig {\n    const _config: IDatePickerDirectiveConfig = {...config};\n    _config.hideInputContainer = true;\n\n    let native;\n\n    if (config.inputElementContainer) {\n      native = this.utilsService.getNativeElement(config.inputElementContainer);\n    } else {\n      native = baseElement ? baseElement.nativeElement : null;\n    }\n\n    if (native) {\n      _config.inputElementContainer = attachTo\n        ? this.convertToHTMLElement(attachTo, native)\n        : native;\n    }\n\n    return _config;\n  }\n}\n","import {CalendarMode} from '../common/types/calendar-mode';\nimport {IDatePickerDirectiveConfig} from './date-picker-directive-config.model';\nimport {DatePickerDirectiveService} from './date-picker-directive.service';\nimport {IDpDayPickerApi} from './date-picker.api';\nimport {DatePickerComponent} from './date-picker.component';\nimport {\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {CalendarValue, ISelectionEvent, SingleCalendarValue} from '..';\nimport {INavEvent} from '../common/models/navigation-event.model';\nimport {UtilsService} from '../common/services/utils/utils.service'\n\n@Directive({\n  exportAs: 'dpDayPicker',\n  providers: [DatePickerDirectiveService],\n  selector: '[dpDayPicker]'\n})\nexport class DatePickerDirective implements OnInit {\n\n  @Output() open = new EventEmitter<void>();\n  @Output() close = new EventEmitter<void>();\n  @Output() onChange = new EventEmitter<CalendarValue>();\n  @Output() onGoToCurrent: EventEmitter<void> = new EventEmitter();\n  @Output() onLeftNav: EventEmitter<INavEvent> = new EventEmitter();\n  @Output() onRightNav: EventEmitter<INavEvent> = new EventEmitter();\n  @Output() onSelect: EventEmitter<ISelectionEvent> = new EventEmitter();\n  datePicker: DatePickerComponent;\n  api: IDpDayPickerApi;\n\n  constructor(public viewContainerRef: ViewContainerRef,\n              public elemRef: ElementRef,\n              public componentFactoryResolver: ComponentFactoryResolver,\n              public service: DatePickerDirectiveService,\n              @Optional() public formControl: NgControl,\n              public utilsService: UtilsService) {\n  }\n\n  private _config: IDatePickerDirectiveConfig;\n\n  get config(): IDatePickerDirectiveConfig {\n    return this._config;\n  }\n\n  @Input('dpDayPicker') set config(config: IDatePickerDirectiveConfig) {\n    this._config = this.service.getConfig(config, this.viewContainerRef.element, this.attachTo);\n    this.updateDatepickerConfig();\n    this.markForCheck();\n  }\n\n  private _attachTo: ElementRef | string;\n\n  get attachTo(): ElementRef | string {\n    return this._attachTo;\n  }\n\n  @Input() set attachTo(attachTo: ElementRef | string) {\n    this._attachTo = attachTo;\n    this._config = this.service.getConfig(this.config, this.viewContainerRef.element, this.attachTo);\n    this.updateDatepickerConfig();\n    this.markForCheck();\n  }\n\n  private _theme: string;\n\n  get theme(): string {\n    return this._theme;\n  }\n\n  @Input() set theme(theme: string) {\n    this._theme = theme;\n    if (this.datePicker) {\n      this.datePicker.theme = theme;\n    }\n\n    this.markForCheck();\n  }\n\n  private _mode: CalendarMode = 'day';\n\n  get mode(): CalendarMode {\n    return this._mode;\n  }\n\n  @Input() set mode(mode: CalendarMode) {\n    this._mode = mode;\n    if (this.datePicker) {\n      this.datePicker.mode = mode;\n    }\n\n    this.markForCheck();\n  }\n\n  private _minDate: SingleCalendarValue;\n\n  get minDate(): SingleCalendarValue {\n    return this._minDate;\n  }\n\n  @Input() set minDate(minDate: SingleCalendarValue) {\n    this._minDate = minDate;\n    if (this.datePicker) {\n      this.datePicker.minDate = minDate;\n      this.datePicker.ngOnInit();\n    }\n\n    this.markForCheck();\n  }\n\n  private _maxDate: SingleCalendarValue;\n\n  get maxDate(): SingleCalendarValue {\n    return this._maxDate;\n  }\n\n  @Input() set maxDate(maxDate: SingleCalendarValue) {\n    this._maxDate = maxDate;\n    if (this.datePicker) {\n      this.datePicker.maxDate = maxDate;\n      this.datePicker.ngOnInit();\n    }\n\n    this.markForCheck();\n  }\n\n  private _minTime: SingleCalendarValue;\n\n  get minTime(): SingleCalendarValue {\n    return this._minTime;\n  }\n\n  @Input() set minTime(minTime: SingleCalendarValue) {\n    this._minTime = minTime;\n    if (this.datePicker) {\n      this.datePicker.minTime = minTime;\n      this.datePicker.ngOnInit();\n    }\n\n    this.markForCheck();\n  }\n\n  private _maxTime: SingleCalendarValue;\n\n  get maxTime(): SingleCalendarValue {\n    return this._maxTime;\n  }\n\n  @Input() set maxTime(maxTime: SingleCalendarValue) {\n    this._maxTime = maxTime;\n    if (this.datePicker) {\n      this.datePicker.maxTime = maxTime;\n      this.datePicker.ngOnInit();\n    }\n\n    this.markForCheck();\n  }\n\n  private _displayDate: SingleCalendarValue;\n\n  get displayDate(): SingleCalendarValue {\n    return this._displayDate;\n  }\n\n  @Input() set displayDate(displayDate: SingleCalendarValue) {\n    this._displayDate = displayDate;\n    this.updateDatepickerConfig();\n\n    this.markForCheck();\n  }\n\n  ngOnInit(): void {\n    this.datePicker = this.createDatePicker();\n    this.api = this.datePicker.api;\n    this.updateDatepickerConfig();\n    this.attachModelToDatePicker();\n    this.datePicker.theme = this.theme;\n  }\n\n  createDatePicker(): DatePickerComponent {\n    const factory = this.componentFactoryResolver.resolveComponentFactory(DatePickerComponent);\n    return this.viewContainerRef.createComponent(factory).instance;\n  }\n\n  attachModelToDatePicker() {\n    if (!this.formControl) {\n      return;\n    }\n\n    this.datePicker.onViewDateChange(this.formControl.value);\n\n    this.formControl.valueChanges.subscribe((value) => {\n      if (value !== this.datePicker.inputElementValue) {\n        const strVal = this.utilsService.convertToString(value, this.datePicker.componentConfig.format);\n        this.datePicker.onViewDateChange(strVal);\n      }\n    });\n\n    let setup = true;\n\n    this.datePicker.registerOnChange((value, changedByInput) => {\n      if (value) {\n        const isMultiselectEmpty = setup && Array.isArray(value) && !value.length;\n\n        if (!isMultiselectEmpty && !changedByInput) {\n          this.formControl.control.setValue(this.datePicker.inputElementValue);\n        }\n      }\n\n      const errors = this.datePicker.validateFn(value);\n\n      if (!setup) {\n        this.formControl.control.markAsDirty({\n          onlySelf: true\n        });\n      } else {\n        setup = false;\n      }\n\n      if (errors) {\n        if (errors.hasOwnProperty('format')) {\n          const {given} = errors['format'];\n          this.datePicker.inputElementValue = given;\n          if (!changedByInput) {\n            this.formControl.control.setValue(given);\n          }\n        }\n\n        this.formControl.control.setErrors(errors);\n      }\n    });\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.datePicker.onClick();\n  }\n\n  @HostListener('focus')\n  onFocus() {\n    this.datePicker.inputFocused();\n  }\n\n  @HostListener('keydown.enter')\n  onEnter() {\n    if (this.datePicker.componentConfig.closeOnEnter) {\n      this.datePicker.hideCalendar();\n    }\n  }\n\n  markForCheck() {\n    if (this.datePicker) {\n      this.datePicker.cd.markForCheck();\n    }\n  }\n\n  private updateDatepickerConfig() {\n    if (this.datePicker) {\n      this.datePicker.minDate = this.minDate;\n      this.datePicker.maxDate = this.maxDate;\n      this.datePicker.minTime = this.minTime;\n      this.datePicker.maxTime = this.maxTime;\n      this.datePicker.mode = this.mode || 'day';\n      this.datePicker.displayDate = this.displayDate;\n      this.datePicker.config = this.config;\n      this.datePicker.open = this.open;\n      this.datePicker.close = this.close;\n      this.datePicker.onChange = this.onChange;\n      this.datePicker.onGoToCurrent = this.onGoToCurrent;\n      this.datePicker.onLeftNav = this.onLeftNav;\n      this.datePicker.onRightNav = this.onRightNav;\n      this.datePicker.onSelect = this.onSelect;\n\n      this.datePicker.init();\n\n      if (this.datePicker.componentConfig.disableKeypress) {\n        this.elemRef.nativeElement.setAttribute('readonly', true);\n      } else {\n        this.elemRef.nativeElement.removeAttribute('readonly');\n      }\n    }\n  }\n}\n","import {ECalendarValue} from '../common/types/calendar-value-enum';\nimport {SingleCalendarValue} from '../common/types/single-calendar-value';\nimport {ECalendarMode} from '../common/types/calendar-mode-enum';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {DayCalendarService} from './day-calendar.service';\nimport * as momentNs from 'moment';\nimport {Moment, unitOfTime} from 'moment';\nimport {IDayCalendarConfig, IDayCalendarConfigInternal} from './day-calendar-config.model';\nimport {IDay} from './day.model';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator\n} from '@angular/forms';\nimport {CalendarValue} from '../common/types/calendar-value';\nimport {UtilsService} from '../common/services/utils/utils.service';\nimport {IMonthCalendarConfig} from '../month-calendar/month-calendar-config';\nimport {IMonth} from '../month-calendar/month.model';\nimport {DateValidator} from '../common/types/validator.type';\nimport {INavEvent} from '../common/models/navigation-event.model';\n\nconst moment = momentNs;\n\n@Component({\n  selector: 'dp-day-calendar',\n  templateUrl: 'day-calendar.component.html',\n  styleUrls: ['day-calendar.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    DayCalendarService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DayCalendarComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => DayCalendarComponent),\n      multi: true\n    }\n  ]\n})\nexport class DayCalendarComponent implements OnInit, OnChanges, ControlValueAccessor, Validator {\n\n  @Input() config: IDayCalendarConfig;\n  @Input() displayDate: SingleCalendarValue;\n  @Input() minDate: Moment;\n  @Input() maxDate: Moment;\n  @HostBinding('class') @Input() theme: string;\n  @Output() onSelect: EventEmitter<IDay> = new EventEmitter();\n  @Output() onMonthSelect: EventEmitter<IMonth> = new EventEmitter();\n  @Output() onNavHeaderBtnClick: EventEmitter<ECalendarMode> = new EventEmitter();\n  @Output() onGoToCurrent: EventEmitter<void> = new EventEmitter();\n  @Output() onLeftNav: EventEmitter<INavEvent> = new EventEmitter();\n  @Output() onRightNav: EventEmitter<INavEvent> = new EventEmitter();\n  CalendarMode = ECalendarMode;\n  isInited: boolean = false;\n  componentConfig: IDayCalendarConfigInternal;\n  weeks: IDay[][];\n  weekdays: Moment[];\n  inputValue: CalendarValue;\n  inputValueType: ECalendarValue;\n  validateFn: DateValidator;\n  currentCalendarMode: ECalendarMode = ECalendarMode.Day;\n  monthCalendarConfig: IMonthCalendarConfig;\n  _shouldShowCurrent: boolean = true;\n  navLabel: string;\n  showLeftNav: boolean;\n  showRightNav: boolean;\n  api = {\n    moveCalendarsBy: this.moveCalendarsBy.bind(this),\n    moveCalendarTo: this.moveCalendarTo.bind(this),\n    toggleCalendarMode: this.toggleCalendarMode.bind(this)\n  };\n\n  constructor(public readonly dayCalendarService: DayCalendarService,\n              public readonly utilsService: UtilsService,\n              public readonly cd: ChangeDetectorRef) {\n  }\n\n  _selected: Moment[];\n\n  get selected(): Moment[] {\n    return this._selected;\n  }\n\n  set selected(selected: Moment[]) {\n    this._selected = selected;\n    this.onChangeCallback(this.processOnChangeCallback(selected));\n  }\n\n  _currentDateView: Moment;\n\n  get currentDateView(): Moment {\n    return this._currentDateView;\n  }\n\n  set currentDateView(current: Moment) {\n    this._currentDateView = current.clone();\n    this.weeks = this.dayCalendarService\n      .generateMonthArray(this.componentConfig, this._currentDateView, this.selected);\n    this.navLabel = this.dayCalendarService.getHeaderLabel(this.componentConfig, this._currentDateView);\n    this.showLeftNav = this.dayCalendarService.shouldShowLeft(this.componentConfig.min, this.currentDateView);\n    this.showRightNav = this.dayCalendarService.shouldShowRight(this.componentConfig.max, this.currentDateView);\n  }\n  ;\n\n  ngOnInit() {\n    this.isInited = true;\n    this.init();\n    this.initValidators();\n  }\n\n  init() {\n    this.componentConfig = this.dayCalendarService.getConfig(this.config);\n    this.selected = this.selected || [];\n    this.currentDateView = this.displayDate\n      ? this.utilsService.convertToMoment(this.displayDate, this.componentConfig.format).clone()\n      : this.utilsService\n        .getDefaultDisplayDate(\n          this.currentDateView,\n          this.selected,\n          this.componentConfig.allowMultiSelect,\n          this.componentConfig.min\n        );\n    this.weekdays = this.dayCalendarService\n      .generateWeekdays(this.componentConfig.firstDayOfWeek);\n    this.inputValueType = this.utilsService.getInputType(this.inputValue, this.componentConfig.allowMultiSelect);\n    this.monthCalendarConfig = this.dayCalendarService.getMonthCalendarConfig(this.componentConfig);\n    this._shouldShowCurrent = this.shouldShowCurrent();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.isInited) {\n      const {minDate, maxDate, config} = changes;\n\n      this.handleConfigChange(config);\n      this.init();\n\n      if (minDate || maxDate) {\n        this.initValidators();\n      }\n    }\n  }\n\n  writeValue(value: CalendarValue): void {\n    this.inputValue = value;\n\n    if (value) {\n      this.selected = this.utilsService\n        .convertToMomentArray(value, this.componentConfig);\n      this.inputValueType = this.utilsService\n        .getInputType(this.inputValue, this.componentConfig.allowMultiSelect);\n    } else {\n      this.selected = [];\n    }\n\n    this.weeks = this.dayCalendarService\n      .generateMonthArray(this.componentConfig, this.currentDateView, this.selected);\n\n    this.cd.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  onChangeCallback(_: any) {\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  validate(formControl: FormControl): ValidationErrors | any {\n    if (this.minDate || this.maxDate) {\n      return this.validateFn(formControl.value);\n    } else {\n      return () => null;\n    }\n  }\n\n  processOnChangeCallback(value: Moment[]): CalendarValue {\n    return this.utilsService.convertFromMomentArray(\n      this.componentConfig.format,\n      value,\n      this.componentConfig.returnedValueType || this.inputValueType\n    );\n  }\n\n  initValidators() {\n    this.validateFn = this.utilsService.createValidator(\n      {minDate: this.minDate, maxDate: this.maxDate},\n      this.componentConfig.format,\n      'day'\n    );\n\n    this.onChangeCallback(this.processOnChangeCallback(this.selected));\n  }\n\n  dayClicked(day: IDay) {\n    if (day.selected && !this.componentConfig.unSelectOnClick) {\n      return;\n    }\n\n    this.selected = this.utilsService\n      .updateSelected(this.componentConfig.allowMultiSelect, this.selected, day);\n    this.weeks = this.dayCalendarService\n      .generateMonthArray(this.componentConfig, this.currentDateView, this.selected);\n    this.onSelect.emit(day);\n  }\n\n  getDayBtnText(day: IDay): string {\n    return this.dayCalendarService.getDayBtnText(this.componentConfig, day.date);\n  }\n\n  getDayBtnCssClass(day: IDay): {[klass: string]: boolean} {\n    const cssClasses: {[klass: string]: boolean} = {\n      'dp-selected': day.selected,\n      'dp-current-month': day.currentMonth,\n      'dp-prev-month': day.prevMonth,\n      'dp-next-month': day.nextMonth,\n      'dp-current-day': day.currentDay\n    };\n    const customCssClass: string = this.dayCalendarService.getDayBtnCssClass(this.componentConfig, day.date);\n    if (customCssClass) {\n      cssClasses[customCssClass] = true;\n    }\n\n    return cssClasses;\n  }\n\n  onLeftNavClick() {\n    const from = this.currentDateView.clone();\n    this.moveCalendarsBy(this.currentDateView, -1, 'month');\n    const to = this.currentDateView.clone();\n    this.onLeftNav.emit({from, to});\n  }\n\n  onRightNavClick() {\n    const from = this.currentDateView.clone();\n    this.moveCalendarsBy(this.currentDateView, 1, 'month');\n    const to = this.currentDateView.clone();\n    this.onRightNav.emit({from, to});\n  }\n\n  onMonthCalendarLeftClick(change: INavEvent) {\n    this.onLeftNav.emit(change);\n  }\n\n  onMonthCalendarRightClick(change: INavEvent) {\n    this.onRightNav.emit(change);\n  }\n\n  onMonthCalendarSecondaryLeftClick(change: INavEvent) {\n    this.onRightNav.emit(change);\n  }\n\n  onMonthCalendarSecondaryRightClick(change: INavEvent) {\n    this.onLeftNav.emit(change);\n  }\n\n  getWeekdayName(weekday: Moment): string {\n    if (this.componentConfig.weekDayFormatter) {\n      return this.componentConfig.weekDayFormatter(weekday.day());\n    }\n\n    return weekday.format(this.componentConfig.weekDayFormat);\n  }\n\n  toggleCalendarMode(mode: ECalendarMode) {\n    if (this.currentCalendarMode !== mode) {\n      this.currentCalendarMode = mode;\n      this.onNavHeaderBtnClick.emit(mode);\n    }\n\n    this.cd.markForCheck();\n  }\n\n  monthSelected(month: IMonth) {\n    this.currentDateView = month.date.clone();\n    this.currentCalendarMode = ECalendarMode.Day;\n    this.onMonthSelect.emit(month);\n  }\n\n  moveCalendarsBy(current: Moment, amount: number, granularity: unitOfTime.Base = 'month') {\n    this.currentDateView = current.clone().add(amount, granularity);\n    this.cd.markForCheck();\n  }\n\n  moveCalendarTo(to: SingleCalendarValue) {\n    if (to) {\n      this.currentDateView = this.utilsService.convertToMoment(to, this.componentConfig.format);\n    }\n\n    this.cd.markForCheck();\n  }\n\n  shouldShowCurrent(): boolean {\n    return this.utilsService.shouldShowCurrent(\n      this.componentConfig.showGoToCurrent,\n      'day',\n      this.componentConfig.min,\n      this.componentConfig.max\n    );\n  }\n\n  goToCurrent() {\n    this.currentDateView = moment();\n    this.onGoToCurrent.emit();\n  }\n\n  handleConfigChange(config: SimpleChange) {\n    if (config) {\n      const prevConf: IDayCalendarConfigInternal = this.dayCalendarService.getConfig(config.previousValue);\n      const currentConf: IDayCalendarConfigInternal = this.dayCalendarService.getConfig(config.currentValue);\n\n      if (this.utilsService.shouldResetCurrentView(prevConf, currentConf)) {\n        this._currentDateView = null;\n      }\n\n      if (prevConf.locale !== currentConf.locale) {\n        if (this.currentDateView) {\n          this.currentDateView.locale(currentConf.locale);\n        }\n\n        this.selected.forEach(m => m.locale(currentConf.locale));\n      }\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport * as momentNs from 'moment';\nimport {Moment} from 'moment';\nimport {UtilsService} from '../common/services/utils/utils.service';\nimport {IMonth} from './month.model';\nimport {IMonthCalendarConfig, IMonthCalendarConfigInternal} from './month-calendar-config';\n\nconst moment = momentNs;\n\n@Injectable()\nexport class MonthCalendarService {\n  readonly DEFAULT_CONFIG: IMonthCalendarConfigInternal = {\n    allowMultiSelect: false,\n    yearFormat: 'YYYY',\n    format: 'MM-YYYY',\n    isNavHeaderBtnClickable: false,\n    monthBtnFormat: 'MMM',\n    locale: moment.locale(),\n    multipleYearsNavigateBy: 10,\n    showMultipleYearsNavigation: false,\n    unSelectOnClick: true,\n    numOfMonthRows: 3\n  };\n\n  constructor(private utilsService: UtilsService) {\n  }\n\n  getConfig(config: IMonthCalendarConfig): IMonthCalendarConfigInternal {\n    const _config = <IMonthCalendarConfigInternal>{\n      ...this.DEFAULT_CONFIG,\n      ...this.utilsService.clearUndefined(config)\n    };\n\n    this.validateConfig(_config);\n\n    this.utilsService.convertPropsToMoment(_config, _config.format, ['min', 'max']);\n    moment.locale(_config.locale);\n\n    return _config;\n  }\n\n  generateYear(config: IMonthCalendarConfig, year: Moment, selected: Moment[] = null): IMonth[][] {\n    const index = year.clone().startOf('year');\n\n    return this.utilsService.createArray(config.numOfMonthRows).map(() => {\n      return this.utilsService.createArray(12 / config.numOfMonthRows).map(() => {\n        const date = index.clone();\n        const month = {\n          date,\n          selected: !!selected.find(s => index.isSame(s, 'month')),\n          currentMonth: index.isSame(moment(), 'month'),\n          disabled: this.isMonthDisabled(date, config),\n          text: this.getMonthBtnText(config, date)\n        };\n\n        index.add(1, 'month');\n\n        return month;\n      });\n    });\n  }\n\n  isMonthDisabled(date: Moment, config: IMonthCalendarConfig) {\n    if (config.isMonthDisabledCallback) {\n      return config.isMonthDisabledCallback(date);\n    }\n\n    if (config.min && date.isBefore(config.min, 'month')) {\n      return true;\n    }\n\n    return !!(config.max && date.isAfter(config.max, 'month'));\n  }\n\n  shouldShowLeft(min: Moment, currentMonthView: Moment): boolean {\n    return min ? min.isBefore(currentMonthView, 'year') : true;\n  }\n\n  shouldShowRight(max: Moment, currentMonthView: Moment): boolean {\n    return max ? max.isAfter(currentMonthView, 'year') : true;\n  }\n\n  getHeaderLabel(config: IMonthCalendarConfig, year: Moment): string {\n    if (config.yearFormatter) {\n      return config.yearFormatter(year);\n    }\n\n    return year.format(config.yearFormat);\n  }\n\n  getMonthBtnText(config: IMonthCalendarConfig, month: Moment): string {\n    if (config.monthBtnFormatter) {\n      return config.monthBtnFormatter(month);\n    }\n\n    return month.format(config.monthBtnFormat);\n  }\n\n  getMonthBtnCssClass(config: IMonthCalendarConfig, month: Moment): string {\n    if (config.monthBtnCssClassCallback) {\n      return config.monthBtnCssClassCallback(month);\n    }\n\n    return '';\n  }\n\n  private validateConfig(config: IMonthCalendarConfigInternal): void {\n    if (config.numOfMonthRows < 1 || config.numOfMonthRows > 12 || !Number.isInteger(12 / config.numOfMonthRows)) {\n      throw new Error('numOfMonthRows has to be between 1 - 12 and divide 12 to integer');\n    }\n  }\n}\n","import {ECalendarValue} from '../common/types/calendar-value-enum';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {IMonth} from './month.model';\nimport {MonthCalendarService} from './month-calendar.service';\nimport * as momentNs from 'moment';\nimport {Moment} from 'moment';\nimport {IMonthCalendarConfig, IMonthCalendarConfigInternal} from './month-calendar-config';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator\n} from '@angular/forms';\nimport {CalendarValue} from '../common/types/calendar-value';\nimport {UtilsService} from '../common/services/utils/utils.service';\nimport {DateValidator} from '../common/types/validator.type';\nimport {SingleCalendarValue} from '../common/types/single-calendar-value';\nimport {INavEvent} from '../common/models/navigation-event.model';\n\nconst moment = momentNs;\n\n@Component({\n  selector: 'dp-month-calendar',\n  templateUrl: 'month-calendar.component.html',\n  styleUrls: ['month-calendar.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    MonthCalendarService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MonthCalendarComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => MonthCalendarComponent),\n      multi: true\n    }\n  ]\n})\nexport class MonthCalendarComponent implements OnInit, OnChanges, ControlValueAccessor, Validator {\n\n  @Input() config: IMonthCalendarConfig;\n  @Input() displayDate: Moment;\n  @Input() minDate: Moment;\n  @Input() maxDate: Moment;\n  @HostBinding('class') @Input() theme: string;\n  @Output() onSelect: EventEmitter<IMonth> = new EventEmitter();\n  @Output() onNavHeaderBtnClick: EventEmitter<null> = new EventEmitter();\n  @Output() onGoToCurrent: EventEmitter<void> = new EventEmitter();\n  @Output() onLeftNav: EventEmitter<INavEvent> = new EventEmitter();\n  @Output() onRightNav: EventEmitter<INavEvent> = new EventEmitter();\n  @Output() onLeftSecondaryNav: EventEmitter<INavEvent> = new EventEmitter();\n  @Output() onRightSecondaryNav: EventEmitter<INavEvent> = new EventEmitter();\n  isInited: boolean = false;\n  componentConfig: IMonthCalendarConfigInternal;\n  yearMonths: IMonth[][];\n  inputValue: CalendarValue;\n  inputValueType: ECalendarValue;\n  validateFn: DateValidator;\n  _shouldShowCurrent: boolean = true;\n  navLabel: string;\n  showLeftNav: boolean;\n  showRightNav: boolean;\n  showSecondaryLeftNav: boolean;\n  showSecondaryRightNav: boolean;\n  api = {\n    toggleCalendar: this.toggleCalendarMode.bind(this),\n    moveCalendarTo: this.moveCalendarTo.bind(this)\n  };\n\n  constructor(public readonly monthCalendarService: MonthCalendarService,\n              public readonly utilsService: UtilsService,\n              public readonly cd: ChangeDetectorRef) {\n  }\n\n  _selected: Moment[];\n\n  get selected(): Moment[] {\n    return this._selected;\n  }\n\n  set selected(selected: Moment[]) {\n    this._selected = selected;\n    this.onChangeCallback(this.processOnChangeCallback(selected));\n  }\n\n  _currentDateView: Moment;\n\n  get currentDateView(): Moment {\n    return this._currentDateView;\n  }\n\n  set currentDateView(current: Moment) {\n    this._currentDateView = current.clone();\n    this.yearMonths = this.monthCalendarService\n      .generateYear(this.componentConfig, this._currentDateView, this.selected);\n    this.navLabel = this.monthCalendarService.getHeaderLabel(this.componentConfig, this.currentDateView);\n    this.showLeftNav = this.monthCalendarService.shouldShowLeft(this.componentConfig.min, this._currentDateView);\n    this.showRightNav = this.monthCalendarService.shouldShowRight(this.componentConfig.max, this.currentDateView);\n    this.showSecondaryLeftNav = this.componentConfig.showMultipleYearsNavigation && this.showLeftNav;\n    this.showSecondaryRightNav = this.componentConfig.showMultipleYearsNavigation && this.showRightNav;\n  }\n\n  ngOnInit(): void {\n    this.isInited = true;\n    this.init();\n    this.initValidators();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.isInited) {\n      const {minDate, maxDate, config} = changes;\n\n      this.handleConfigChange(config);\n      this.init();\n\n      if (minDate || maxDate) {\n        this.initValidators();\n      }\n    }\n  }\n\n  init(): void {\n    this.componentConfig = this.monthCalendarService.getConfig(this.config);\n    this.selected = this.selected || [];\n    this.currentDateView = this.displayDate\n      ? this.displayDate\n      : this.utilsService\n        .getDefaultDisplayDate(\n          this.currentDateView,\n          this.selected,\n          this.componentConfig.allowMultiSelect,\n          this.componentConfig.min\n        );\n    this.inputValueType = this.utilsService.getInputType(this.inputValue, this.componentConfig.allowMultiSelect);\n    this._shouldShowCurrent = this.shouldShowCurrent();\n  }\n\n  writeValue(value: CalendarValue): void {\n    this.inputValue = value;\n\n    if (value) {\n      this.selected = this.utilsService\n        .convertToMomentArray(value, this.componentConfig);\n      this.yearMonths = this.monthCalendarService\n        .generateYear(this.componentConfig, this.currentDateView, this.selected);\n      this.inputValueType = this.utilsService.getInputType(this.inputValue, this.componentConfig.allowMultiSelect);\n    } else {\n      this.selected = [];\n      this.yearMonths = this.monthCalendarService\n        .generateYear(this.componentConfig, this.currentDateView, this.selected);\n    }\n\n    this.cd.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  onChangeCallback(_: any): void {\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  validate(formControl: FormControl): ValidationErrors | any {\n    if (this.minDate || this.maxDate) {\n      return this.validateFn(formControl.value);\n    } else {\n      return () => null;\n    }\n  }\n\n  processOnChangeCallback(value: Moment[]): CalendarValue {\n    return this.utilsService.convertFromMomentArray(\n      this.componentConfig.format,\n      value,\n      this.componentConfig.returnedValueType || this.inputValueType\n    );\n  }\n\n  initValidators(): void {\n    this.validateFn = this.validateFn = this.utilsService.createValidator(\n      {minDate: this.minDate, maxDate: this.maxDate},\n      this.componentConfig.format,\n      'month'\n    );\n\n    this.onChangeCallback(this.processOnChangeCallback(this.selected));\n  }\n\n  monthClicked(month: IMonth): void {\n    if (month.selected && !this.componentConfig.unSelectOnClick) {\n      return;\n    }\n\n    this.selected = this.utilsService\n      .updateSelected(this.componentConfig.allowMultiSelect, this.selected, month, 'month');\n    this.yearMonths = this.monthCalendarService\n      .generateYear(this.componentConfig, this.currentDateView, this.selected);\n    this.onSelect.emit(month);\n  }\n\n  onLeftNavClick() {\n    const from = this.currentDateView.clone();\n    this.currentDateView = this.currentDateView.clone().subtract(1, 'year');\n    const to = this.currentDateView.clone();\n    this.yearMonths = this.monthCalendarService.generateYear(this.componentConfig, this.currentDateView, this.selected);\n    this.onLeftNav.emit({from, to});\n  }\n\n  onLeftSecondaryNavClick(): void {\n    let navigateBy = this.componentConfig.multipleYearsNavigateBy;\n    const isOutsideRange = this.componentConfig.min &&\n      this.currentDateView.year() - this.componentConfig.min.year() < navigateBy;\n\n    if (isOutsideRange) {\n      navigateBy = this.currentDateView.year() - this.componentConfig.min.year();\n    }\n\n    const from = this.currentDateView.clone();\n    this.currentDateView = this.currentDateView.clone().subtract(navigateBy, 'year');\n    const to = this.currentDateView.clone();\n    this.onLeftSecondaryNav.emit({from, to});\n  }\n\n  onRightNavClick(): void {\n    const from = this.currentDateView.clone();\n    this.currentDateView = this.currentDateView.clone().add(1, 'year');\n    const to = this.currentDateView.clone();\n    this.onRightNav.emit({from, to});\n  }\n\n  onRightSecondaryNavClick(): void {\n    let navigateBy = this.componentConfig.multipleYearsNavigateBy;\n    const isOutsideRange = this.componentConfig.max &&\n      this.componentConfig.max.year() - this.currentDateView.year() < navigateBy;\n\n    if (isOutsideRange) {\n      navigateBy = this.componentConfig.max.year() - this.currentDateView.year();\n    }\n\n    const from = this.currentDateView.clone();\n    this.currentDateView = this.currentDateView.clone().add(navigateBy, 'year');\n    const to = this.currentDateView.clone();\n    this.onRightSecondaryNav.emit({from, to});\n  }\n\n  toggleCalendarMode(): void {\n    this.onNavHeaderBtnClick.emit();\n  }\n\n  getMonthBtnCssClass(month: IMonth): {[klass: string]: boolean} {\n    const cssClass: {[klass: string]: boolean} = {\n      'dp-selected': month.selected,\n      'dp-current-month': month.currentMonth\n    };\n    const customCssClass: string = this.monthCalendarService.getMonthBtnCssClass(this.componentConfig, month.date);\n\n    if (customCssClass) {\n      cssClass[customCssClass] = true;\n    }\n\n    return cssClass;\n  }\n\n  shouldShowCurrent(): boolean {\n    return this.utilsService.shouldShowCurrent(\n      this.componentConfig.showGoToCurrent,\n      'month',\n      this.componentConfig.min,\n      this.componentConfig.max\n    );\n  }\n\n  goToCurrent(): void {\n    this.currentDateView = moment();\n    this.onGoToCurrent.emit();\n  }\n\n  moveCalendarTo(to: SingleCalendarValue): void {\n    if (to) {\n      this.currentDateView = this.utilsService.convertToMoment(to, this.componentConfig.format);\n      this.cd.markForCheck();\n    }\n  }\n\n  handleConfigChange(config: SimpleChange): void {\n    if (config) {\n      const prevConf: IMonthCalendarConfigInternal = this.monthCalendarService.getConfig(config.previousValue);\n      const currentConf: IMonthCalendarConfigInternal = this.monthCalendarService.getConfig(config.currentValue);\n\n      if (this.utilsService.shouldResetCurrentView(prevConf, currentConf)) {\n        this._currentDateView = null;\n      }\n\n      if (prevConf.locale !== currentConf.locale) {\n        if (this.currentDateView) {\n          this.currentDateView.locale(currentConf.locale)\n        }\n\n        (this.selected || []).forEach((m) => m.locale(currentConf.locale));\n      }\n    }\n  }\n}\n","import {ECalendarValue} from '../common/types/calendar-value-enum';\nimport {SingleCalendarValue} from '../common/types/single-calendar-value';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {TimeSelectService, TimeUnit} from './time-select.service';\nimport * as momentNs from 'moment';\nimport {Moment} from 'moment';\nimport {ITimeSelectConfig, ITimeSelectConfigInternal} from './time-select-config.model';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator\n} from '@angular/forms';\nimport {CalendarValue} from '../common/types/calendar-value';\nimport {UtilsService} from '../common/services/utils/utils.service';\nimport {IDate} from '../common/models/date.model';\nimport {DateValidator} from '../common/types/validator.type';\nimport {IDayCalendarConfigInternal} from '../day-calendar/day-calendar-config.model';\n\nconst moment = momentNs;\n\n@Component({\n  selector: 'dp-time-select',\n  templateUrl: 'time-select.component.html',\n  styleUrls: ['time-select.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    TimeSelectService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TimeSelectComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => TimeSelectComponent),\n      multi: true\n    }\n  ]\n})\nexport class TimeSelectComponent implements OnInit, OnChanges, ControlValueAccessor, Validator {\n\n  @Input() config: ITimeSelectConfig;\n  @Input() displayDate: SingleCalendarValue;\n  @Input() minDate: SingleCalendarValue;\n  @Input() maxDate: SingleCalendarValue;\n  @Input() minTime: SingleCalendarValue;\n  @Input() maxTime: SingleCalendarValue;\n  @HostBinding('class') @Input() theme: string;\n  @Output() onChange: EventEmitter<IDate> = new EventEmitter();\n  isInited: boolean = false;\n  componentConfig: ITimeSelectConfigInternal;\n  inputValue: CalendarValue;\n  inputValueType: ECalendarValue;\n  validateFn: DateValidator;\n  hours: string;\n  minutes: string;\n  seconds: string;\n  meridiem: string;\n  showDecHour: boolean;\n  showDecMinute: boolean;\n  showDecSecond: boolean;\n  showIncHour: boolean;\n  showIncMinute: boolean;\n  showIncSecond: boolean;\n  showToggleMeridiem: boolean;\n  api = {\n    triggerChange: this.emitChange.bind(this)\n  };\n\n  constructor(public timeSelectService: TimeSelectService,\n              public utilsService: UtilsService,\n              public cd: ChangeDetectorRef) {\n  }\n\n  _selected: Moment;\n\n  get selected(): Moment {\n    return this._selected;\n  }\n\n  set selected(selected: Moment) {\n    this._selected = selected;\n    this.calculateTimeParts(this.selected);\n\n    this.showDecHour = this.timeSelectService.shouldShowDecrease(this.componentConfig, this._selected, 'hour');\n    this.showDecMinute = this.timeSelectService.shouldShowDecrease(this.componentConfig, this._selected, 'minute');\n    this.showDecSecond = this.timeSelectService.shouldShowDecrease(this.componentConfig, this._selected, 'second');\n\n    this.showIncHour = this.timeSelectService.shouldShowIncrease(this.componentConfig, this._selected, 'hour');\n    this.showIncMinute = this.timeSelectService.shouldShowIncrease(this.componentConfig, this._selected, 'minute');\n    this.showIncSecond = this.timeSelectService.shouldShowIncrease(this.componentConfig, this._selected, 'second');\n\n    this.showToggleMeridiem = this.timeSelectService.shouldShowToggleMeridiem(this.componentConfig, this._selected);\n\n    this.onChangeCallback(this.processOnChangeCallback(selected));\n  }\n\n  ngOnInit() {\n    this.isInited = true;\n    this.init();\n    this.initValidators();\n  }\n\n  init() {\n    this.componentConfig = this.timeSelectService.getConfig(this.config);\n    this.selected = this.selected || moment();\n    this.inputValueType = this.utilsService.getInputType(this.inputValue, false);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.isInited) {\n      const {minDate, maxDate, minTime, maxTime} = changes;\n      this.init();\n\n      if (minDate || maxDate || minTime || maxTime) {\n        this.initValidators();\n      }\n\n      this.handleConfigChange(changes.config);\n    }\n  }\n\n  writeValue(value: CalendarValue): void {\n    this.inputValue = value;\n\n    if (value) {\n      const momentValue = this.utilsService\n        .convertToMomentArray(value, {\n          allowMultiSelect: false,\n          format: this.timeSelectService.getTimeFormat(this.componentConfig)\n        })[0];\n      if (momentValue.isValid()) {\n        this.selected = momentValue;\n        this.inputValueType = this.utilsService\n          .getInputType(this.inputValue, false);\n      }\n    }\n\n    this.cd.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  onChangeCallback(_: any) {\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  validate(formControl: FormControl): ValidationErrors | any {\n    if (this.minDate || this.maxDate || this.minTime || this.maxTime) {\n      return this.validateFn(formControl.value);\n    } else {\n      return () => null;\n    }\n  }\n\n  processOnChangeCallback(value: Moment): CalendarValue {\n    return this.utilsService.convertFromMomentArray(\n      this.timeSelectService.getTimeFormat(this.componentConfig),\n      [value],\n      this.componentConfig.returnedValueType || this.inputValueType\n    );\n  }\n\n  initValidators() {\n    this.validateFn = this.utilsService.createValidator(\n      {\n        minDate: this.minDate,\n        maxDate: this.maxDate,\n        minTime: this.minTime,\n        maxTime: this.maxTime\n      }, undefined, 'day');\n\n    this.onChangeCallback(this.processOnChangeCallback(this.selected));\n  }\n\n  decrease(unit: TimeUnit) {\n    this.selected = this.timeSelectService.decrease(this.componentConfig, this.selected, unit);\n    this.emitChange();\n  }\n\n  increase(unit: TimeUnit) {\n    this.selected = this.timeSelectService.increase(this.componentConfig, this.selected, unit);\n    this.emitChange();\n  }\n\n  toggleMeridiem() {\n    this.selected = this.timeSelectService.toggleMeridiem(this.selected);\n    this.emitChange();\n  }\n\n  emitChange() {\n    this.onChange.emit({date: this.selected, selected: false});\n    this.cd.markForCheck();\n  }\n\n  calculateTimeParts(time: Moment) {\n    this.hours = this.timeSelectService.getHours(this.componentConfig, time);\n    this.minutes = this.timeSelectService.getMinutes(this.componentConfig, time);\n    this.seconds = this.timeSelectService.getSeconds(this.componentConfig, time);\n    this.meridiem = this.timeSelectService.getMeridiem(this.componentConfig, time);\n  }\n\n  private handleConfigChange(config: SimpleChange) {\n    if (config) {\n      const prevConf: IDayCalendarConfigInternal = this.timeSelectService.getConfig(config.previousValue);\n      const currentConf: IDayCalendarConfigInternal = this.timeSelectService.getConfig(config.currentValue);\n\n      if (prevConf.locale !== currentConf.locale) {\n        this.selected = this.selected.clone().locale(currentConf.locale);\n      }\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n  selector: 'dp-calendar-nav',\n  templateUrl: './calendar-nav.component.html',\n  styleUrls: ['./calendar-nav.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CalendarNavComponent {\n  @Input() label: string;\n  @Input() isLabelClickable: boolean = false;\n  @Input() showLeftNav: boolean = true;\n  @Input() showLeftSecondaryNav: boolean = false;\n  @Input() showRightNav: boolean = true;\n  @Input() showRightSecondaryNav: boolean = false;\n  @Input() leftNavDisabled: boolean = false;\n  @Input() leftSecondaryNavDisabled: boolean = false;\n  @Input() rightNavDisabled: boolean = false;\n  @Input() rightSecondaryNavDisabled: boolean = false;\n  @Input() showGoToCurrent: boolean = true;\n  @HostBinding('class') @Input() theme: string;\n\n  @Output() onLeftNav: EventEmitter<null> = new EventEmitter();\n  @Output() onLeftSecondaryNav: EventEmitter<null> = new EventEmitter();\n  @Output() onRightNav: EventEmitter<null> = new EventEmitter();\n  @Output() onRightSecondaryNav: EventEmitter<null> = new EventEmitter();\n  @Output() onLabelClick: EventEmitter<null> = new EventEmitter();\n  @Output() onGoToCurrent: EventEmitter<null> = new EventEmitter();\n\n  leftNavClicked() {\n    this.onLeftNav.emit();\n  }\n\n  leftSecondaryNavClicked() {\n    this.onLeftSecondaryNav.emit();\n  }\n\n  rightNavClicked() {\n    this.onRightNav.emit();\n  }\n\n  rightSecondaryNavClicked() {\n    this.onRightSecondaryNav.emit();\n  }\n\n  labelClicked() {\n    this.onLabelClick.emit();\n  }\n}\n","import {ECalendarValue} from '../common/types/calendar-value-enum';\nimport {SingleCalendarValue} from '../common/types/single-calendar-value';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator\n} from '@angular/forms';\nimport {Moment} from 'moment';\nimport {CalendarValue} from '../common/types/calendar-value';\nimport {UtilsService} from '../common/services/utils/utils.service';\nimport {IDate} from '../common/models/date.model';\nimport {DayCalendarService} from '../day-calendar/day-calendar.service';\nimport {TimeSelectService} from '../time-select/time-select.service';\nimport {IDayTimeCalendarConfig} from './day-time-calendar-config.model';\nimport {DayTimeCalendarService} from './day-time-calendar.service';\nimport {DateValidator} from '../common/types/validator.type';\nimport {DayCalendarComponent} from '../day-calendar/day-calendar.component';\nimport {INavEvent} from '../common/models/navigation-event.model';\n\n@Component({\n  selector: 'dp-day-time-calendar',\n  templateUrl: 'day-time-calendar.component.html',\n  styleUrls: ['day-time-calendar.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    DayTimeCalendarService,\n    DayCalendarService,\n    TimeSelectService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DayTimeCalendarComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => DayTimeCalendarComponent),\n      multi: true\n    }\n  ]\n})\nexport class DayTimeCalendarComponent implements OnInit, OnChanges, ControlValueAccessor, Validator {\n\n  @Input() config: IDayTimeCalendarConfig;\n  @Input() displayDate: SingleCalendarValue;\n  @Input() minDate: SingleCalendarValue;\n  @Input() maxDate: SingleCalendarValue;\n  @HostBinding('class') @Input() theme: string;\n  @Output() onChange: EventEmitter<IDate> = new EventEmitter();\n  @Output() onGoToCurrent: EventEmitter<void> = new EventEmitter();\n  @Output() onLeftNav: EventEmitter<INavEvent> = new EventEmitter();\n  @Output() onRightNav: EventEmitter<INavEvent> = new EventEmitter();\n  @ViewChild('dayCalendar') dayCalendarRef: DayCalendarComponent;\n  isInited: boolean = false;\n  componentConfig: IDayTimeCalendarConfig;\n  inputValue: CalendarValue;\n  inputValueType: ECalendarValue;\n  validateFn: DateValidator;\n  api = {\n    moveCalendarTo: this.moveCalendarTo.bind(this)\n  };\n\n  constructor(public dayTimeCalendarService: DayTimeCalendarService,\n              public utilsService: UtilsService,\n              public cd: ChangeDetectorRef) {\n  }\n\n  _selected: Moment;\n\n  get selected(): Moment {\n    return this._selected;\n  }\n\n  set selected(selected: Moment) {\n    this._selected = selected;\n    this.onChangeCallback(this.processOnChangeCallback(selected));\n  }\n  ;\n\n  ngOnInit() {\n    this.isInited = true;\n    this.init();\n    this.initValidators();\n  }\n\n  init() {\n    this.componentConfig = this.dayTimeCalendarService.getConfig(this.config);\n    this.inputValueType = this.utilsService.getInputType(this.inputValue, false);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.isInited) {\n      const {minDate, maxDate} = changes;\n      this.init();\n\n      if (minDate || maxDate) {\n        this.initValidators();\n      }\n    }\n  }\n\n  writeValue(value: CalendarValue): void {\n    this.inputValue = value;\n\n    if (value) {\n      this.selected = this.utilsService\n        .convertToMomentArray(value, {\n          format: this.componentConfig.format,\n          allowMultiSelect: false\n        })[0];\n      this.inputValueType = this.utilsService\n        .getInputType(this.inputValue, false);\n    } else {\n      this.selected = null;\n    }\n\n    this.cd.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  onChangeCallback(_: any) {\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  validate(formControl: FormControl): ValidationErrors | any {\n    if (this.minDate || this.maxDate) {\n      return this.validateFn(formControl.value);\n    } else {\n      return () => null;\n    }\n  }\n\n  processOnChangeCallback(value: Moment): CalendarValue {\n    return this.utilsService.convertFromMomentArray(\n      this.componentConfig.format,\n      [value],\n      this.componentConfig.returnedValueType || this.inputValueType\n    );\n  }\n\n  initValidators() {\n    this.validateFn = this.utilsService.createValidator(\n      {\n        minDate: this.minDate,\n        maxDate: this.maxDate\n      }, undefined, 'daytime');\n\n    this.onChangeCallback(this.processOnChangeCallback(this.selected));\n  }\n\n  dateSelected(day: IDate) {\n    this.selected = this.dayTimeCalendarService.updateDay(this.selected, day.date, this.config);\n    this.emitChange();\n  }\n\n  timeChange(time: IDate) {\n    this.selected = this.dayTimeCalendarService.updateTime(this.selected, time.date);\n    this.emitChange();\n  }\n\n  emitChange() {\n    this.onChange.emit({date: this.selected, selected: false});\n  }\n\n  moveCalendarTo(to: SingleCalendarValue) {\n    if (to) {\n      this.dayCalendarRef.moveCalendarTo(to);\n    }\n  }\n\n  onLeftNavClick(change: INavEvent) {\n    this.onLeftNav.emit(change);\n  }\n\n  onRightNavClick(change: INavEvent) {\n    this.onRightNav.emit(change);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {DatePickerComponent} from './date-picker/date-picker.component';\nimport {DatePickerDirective} from './date-picker/date-picker.directive';\nimport {DayCalendarComponent} from './day-calendar/day-calendar.component';\nimport {MonthCalendarComponent} from './month-calendar/month-calendar.component';\nimport {TimeSelectComponent} from './time-select/time-select.component';\nimport {CalendarNavComponent} from './calendar-nav/calendar-nav.component';\nimport {DayTimeCalendarComponent} from './day-time-calendar/day-time-calendar.component';\n\nexport {DatePickerComponent} from './date-picker/date-picker.component';\nexport {DatePickerDirective} from './date-picker/date-picker.directive';\nexport {DayCalendarComponent} from './day-calendar/day-calendar.component';\nexport {DayTimeCalendarComponent} from './day-time-calendar/day-time-calendar.component';\nexport {TimeSelectComponent} from './time-select/time-select.component';\nexport {MonthCalendarComponent} from './month-calendar/month-calendar.component';\n\n@NgModule({\n  declarations: [\n    DatePickerComponent,\n    DatePickerDirective,\n    DayCalendarComponent,\n    MonthCalendarComponent,\n    CalendarNavComponent,\n    TimeSelectComponent,\n    DayTimeCalendarComponent\n  ],\n  entryComponents: [\n    DatePickerComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    DatePickerComponent,\n    DatePickerDirective,\n    MonthCalendarComponent,\n    DayCalendarComponent,\n    TimeSelectComponent,\n    DayTimeCalendarComponent\n  ]\n})\nexport class DpDatePickerModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {CalendarNavComponent as ɵi} from './calendar-nav/calendar-nav.component';\nexport {DomHelper as ɵf} from './common/services/dom-appender/dom-appender.service';\nexport {UtilsService as ɵb} from './common/services/utils/utils.service';\nexport {DatePickerDirectiveService as ɵg} from './date-picker/date-picker-directive.service';\nexport {DatePickerService as ɵa} from './date-picker/date-picker.service';\nexport {DayCalendarService as ɵe} from './day-calendar/day-calendar.service';\nexport {DayTimeCalendarService as ɵd} from './day-time-calendar/day-time-calendar.service';\nexport {MonthCalendarService as ɵh} from './month-calendar/month-calendar.service';\nexport {TimeSelectService as ɵc} from './time-select/time-select.service';"],"names":["moment"],"mappings":"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"}