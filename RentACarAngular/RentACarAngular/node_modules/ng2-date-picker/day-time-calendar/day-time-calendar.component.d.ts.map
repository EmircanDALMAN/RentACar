{"version":3,"file":"day-time-calendar.component.d.ts","sources":["day-time-calendar.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ECalendarValue } from '../common/types/calendar-value-enum';\nimport { SingleCalendarValue } from '../common/types/single-calendar-value';\nimport { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, FormControl, ValidationErrors, Validator } from '@angular/forms';\nimport { Moment } from 'moment';\nimport { CalendarValue } from '../common/types/calendar-value';\nimport { UtilsService } from '../common/services/utils/utils.service';\nimport { IDate } from '../common/models/date.model';\nimport { IDayTimeCalendarConfig } from './day-time-calendar-config.model';\nimport { DayTimeCalendarService } from './day-time-calendar.service';\nimport { DateValidator } from '../common/types/validator.type';\nimport { DayCalendarComponent } from '../day-calendar/day-calendar.component';\nimport { INavEvent } from '../common/models/navigation-event.model';\nexport declare class DayTimeCalendarComponent implements OnInit, OnChanges, ControlValueAccessor, Validator {\n    dayTimeCalendarService: DayTimeCalendarService;\n    utilsService: UtilsService;\n    cd: ChangeDetectorRef;\n    config: IDayTimeCalendarConfig;\n    displayDate: SingleCalendarValue;\n    minDate: SingleCalendarValue;\n    maxDate: SingleCalendarValue;\n    theme: string;\n    onChange: EventEmitter<IDate>;\n    onGoToCurrent: EventEmitter<void>;\n    onLeftNav: EventEmitter<INavEvent>;\n    onRightNav: EventEmitter<INavEvent>;\n    dayCalendarRef: DayCalendarComponent;\n    isInited: boolean;\n    componentConfig: IDayTimeCalendarConfig;\n    inputValue: CalendarValue;\n    inputValueType: ECalendarValue;\n    validateFn: DateValidator;\n    api: {\n        moveCalendarTo: any;\n    };\n    constructor(dayTimeCalendarService: DayTimeCalendarService, utilsService: UtilsService, cd: ChangeDetectorRef);\n    _selected: Moment;\n    get selected(): Moment;\n    set selected(selected: Moment);\n    ngOnInit(): void;\n    init(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    writeValue(value: CalendarValue): void;\n    registerOnChange(fn: any): void;\n    onChangeCallback(_: any): void;\n    registerOnTouched(fn: any): void;\n    validate(formControl: FormControl): ValidationErrors | any;\n    processOnChangeCallback(value: Moment): CalendarValue;\n    initValidators(): void;\n    dateSelected(day: IDate): void;\n    timeChange(time: IDate): void;\n    emitChange(): void;\n    moveCalendarTo(to: SingleCalendarValue): void;\n    onLeftNavClick(change: INavEvent): void;\n    onRightNavClick(change: INavEvent): void;\n}\n"]}