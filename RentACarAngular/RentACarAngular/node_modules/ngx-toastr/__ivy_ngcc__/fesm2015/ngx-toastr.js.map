{"version":3,"file":"ngx-toastr.js","sources":["../../src/lib/toastr/toast.directive.ts","../../src/lib/toastr/toastr-config.ts","../../src/lib/portal/portal.ts","../../src/lib/portal/dom-portal-host.ts","../../src/lib/overlay/overlay-container.ts","../../src/lib/overlay/overlay-ref.ts","../../src/lib/overlay/overlay.ts","../../src/lib/toastr/toast-injector.ts","../../src/lib/toastr/toastr.service.ts","../../src/lib/toastr/toast.component.ts","../../src/lib/toastr/toastr.module.ts","../../src/lib/toastr/toast-noanimation.component.ts","../../src/lib/ngx-toastr.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  NgModule,\n} from '@angular/core';\n\n@Directive({\n  selector: '[toastContainer]',\n  exportAs: 'toastContainer',\n})\nexport class ToastContainerDirective {\n  constructor(private el: ElementRef) { }\n  getContainerElement(): HTMLElement {\n    return this.el.nativeElement;\n  }\n}\n\n@NgModule({\n  declarations: [ToastContainerDirective],\n  exports: [ToastContainerDirective],\n})\nexport class ToastContainerModule {}\n","import { InjectionToken } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport { ComponentType } from '../portal/portal';\nimport { ToastRef } from './toast-injector';\n\nexport type ProgressAnimationType = 'increasing' | 'decreasing';\n\n/**\n * Configuration for an individual toast.\n */\nexport interface IndividualConfig {\n  /**\n   * disable both timeOut and extendedTimeOut\n   * default: false\n   */\n  disableTimeOut: boolean | 'timeOut' | 'extendedTimeOut';\n  /**\n   * toast time to live in milliseconds\n   * default: 5000\n   */\n  timeOut: number;\n  /**\n   * toast show close button\n   * default: false\n   */\n  closeButton: boolean;\n  /**\n   * time to close after a user hovers over toast\n   * default: 1000\n   */\n  extendedTimeOut: number;\n  /**\n   * show toast progress bar\n   * default: false\n   */\n  progressBar: boolean;\n\n  /**\n   * changes toast progress bar animation\n   * default: decreasing\n   */\n  progressAnimation: ProgressAnimationType;\n\n  /**\n   * render html in toast message (possibly unsafe)\n   * default: false\n   */\n  enableHtml: boolean;\n  /**\n   * css class on toast component\n   * default: ngx-toastr\n   */\n  toastClass: string;\n  /**\n   * css class on toast container\n   * default: toast-top-right\n   */\n  positionClass: string;\n  /**\n   * css class on toast title\n   * default: toast-title\n   */\n  titleClass: string;\n  /**\n   * css class on toast message\n   * default: toast-message\n   */\n  messageClass: string;\n  /**\n   * animation easing on toast\n   * default: ease-in\n   */\n  easing: string;\n  /**\n   * animation ease time on toast\n   * default: 300\n   */\n  easeTime: string | number;\n  /**\n   * clicking on toast dismisses it\n   * default: true\n   */\n  tapToDismiss: boolean;\n  /**\n   * Angular toast component to be shown\n   * default: Toast\n   */\n  toastComponent?: ComponentType<any>;\n  /**\n   * Helps show toast from a websocket or from event outside Angular\n   * default: false\n   */\n  onActivateTick: boolean;\n  /**\n   * New toast placement\n   * default: true\n   */\n  newestOnTop: boolean;\n}\n\nexport interface ToastrIconClasses {\n  error: string;\n  info: string;\n  success: string;\n  warning: string;\n  [key: string]: string;\n}\n\n/**\n * Global Toast configuration\n * Includes all IndividualConfig\n */\nexport interface GlobalConfig extends IndividualConfig {\n  /**\n   * max toasts opened. Toasts will be queued\n   * Zero is unlimited\n   * default: 0\n   */\n  maxOpened: number;\n  /**\n   * dismiss current toast when max is reached\n   * default: false\n   */\n  autoDismiss: boolean;\n  iconClasses: Partial<ToastrIconClasses>;\n  /**\n   * block duplicate messages\n   * default: false\n   */\n  preventDuplicates: boolean;\n  /**\n   * display the number of duplicate messages\n   * default: false\n   */\n  countDuplicates: boolean;\n  /**\n   * Reset toast timeout when there's a duplicate (preventDuplicates needs to be set to true)\n   * default: false\n   */\n  resetTimeoutOnDuplicate: boolean;\n  /**\n   * consider the title of a toast when checking if duplicate\n   * default: false\n   */\n  includeTitleDuplicates: boolean;\n}\n\n/**\n * Everything a toast needs to launch\n */\nexport class ToastPackage {\n  private _onTap = new Subject<void>();\n  private _onAction = new Subject<any>();\n\n  constructor(\n    public toastId: number,\n    public config: IndividualConfig,\n    public message: string | null | undefined,\n    public title: string | undefined,\n    public toastType: string,\n    public toastRef: ToastRef<any>,\n  ) {\n    this.toastRef.afterClosed().subscribe(() => {\n      this._onAction.complete();\n      this._onTap.complete();\n    });\n  }\n\n  /** Fired on click */\n  triggerTap(): void {\n    this._onTap.next();\n    if (this.config.tapToDismiss) {\n      this._onTap.complete();\n    }\n  }\n\n  onTap(): Observable<void> {\n    return this._onTap.asObservable();\n  }\n\n  /** available for use in custom toast */\n  triggerAction(action?: any): void {\n    this._onAction.next(action);\n  }\n\n  onAction(): Observable<void> {\n    return this._onAction.asObservable();\n  }\n}\n\n/* tslint:disable:no-empty-interface */\n/** @deprecated use GlobalConfig */\nexport interface GlobalToastrConfig extends GlobalConfig {}\n/** @deprecated use IndividualConfig */\nexport interface IndividualToastrConfig extends IndividualConfig {}\n/** @deprecated use IndividualConfig */\nexport interface ToastrConfig extends IndividualConfig {}\n\nexport const DefaultNoComponentGlobalConfig: GlobalConfig = {\n  maxOpened: 0,\n  autoDismiss: false,\n  newestOnTop: true,\n  preventDuplicates: false,\n  countDuplicates: false,\n  resetTimeoutOnDuplicate: false,\n  includeTitleDuplicates: false,\n\n  iconClasses: {\n    error: 'toast-error',\n    info: 'toast-info',\n    success: 'toast-success',\n    warning: 'toast-warning',\n  },\n\n  // Individual\n  closeButton: false,\n  disableTimeOut: false,\n  timeOut: 5000,\n  extendedTimeOut: 1000,\n  enableHtml: false,\n  progressBar: false,\n  toastClass: 'ngx-toastr',\n  positionClass: 'toast-top-right',\n  titleClass: 'toast-title',\n  messageClass: 'toast-message',\n  easing: 'ease-in',\n  easeTime: 300,\n  tapToDismiss: true,\n  onActivateTick: false,\n  progressAnimation: 'decreasing',\n};\n\nexport interface ToastToken {\n  default: GlobalConfig;\n  config: Partial<GlobalConfig>;\n}\n\nexport const TOAST_CONFIG = new InjectionToken<ToastToken>('ToastConfig');\n","import {\n  ComponentRef,\n  Injector,\n  ViewContainerRef\n} from '@angular/core';\n\nexport interface ComponentType<T> {\n  // tslint:disable-next-line:callable-types\n  new (...args: any[]): T;\n}\n\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nexport class ComponentPortal<T> {\n  private _attachedHost?: BasePortalHost;\n  /** The type of the component that will be instantiated for attachment. */\n  component: ComponentType<T>;\n\n  /**\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\n   * This is different from where the component *renders*, which is determined by the PortalHost.\n   * The origin necessary when the host is outside of the Angular application context.\n   */\n  viewContainerRef!: ViewContainerRef;\n\n  /** Injector used for the instantiation of the component. */\n  injector: Injector;\n\n  constructor(component: ComponentType<T>, injector: Injector) {\n    this.component = component;\n    this.injector = injector;\n  }\n\n  /** Attach this portal to a host. */\n  attach(host: BasePortalHost, newestOnTop: boolean): ComponentRef<any> {\n    this._attachedHost = host;\n    return host.attach(this, newestOnTop);\n  }\n\n  /** Detach this portal from its host */\n  detach() {\n    const host = this._attachedHost;\n    if (host) {\n      this._attachedHost = undefined;\n      return host.detach();\n    }\n  }\n\n  /** Whether this portal is attached to a host. */\n  get isAttached(): boolean {\n    return this._attachedHost != null;\n  }\n\n  /**\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\n   * the PortalHost when it is performing an `attach()` or `detach()`.\n   */\n  setAttachedHost(host?: BasePortalHost) {\n    this._attachedHost = host;\n  }\n}\n\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nexport abstract class BasePortalHost {\n  /** The portal currently attached to the host. */\n  private _attachedPortal?: ComponentPortal<any>;\n\n  /** A function that will permanently dispose this host. */\n  private _disposeFn?: () => void;\n\n  attach(portal: ComponentPortal<any>, newestOnTop: boolean) {\n    this._attachedPortal = portal;\n    return this.attachComponentPortal(portal, newestOnTop);\n  }\n\n  abstract attachComponentPortal<T>(portal: ComponentPortal<T>, newestOnTop: boolean): ComponentRef<T>;\n\n  detach() {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost();\n    }\n\n    this._attachedPortal = undefined;\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = undefined;\n    }\n  }\n\n  setDisposeFn(fn: () => void) {\n    this._disposeFn = fn;\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n} from '@angular/core';\nimport { BasePortalHost, ComponentPortal } from './portal';\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nexport class DomPortalHost extends BasePortalHost {\n  constructor(\n    private _hostDomElement: Element,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n  ) {\n    super();\n  }\n\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   */\n  attachComponentPortal<T>(\n    portal: ComponentPortal<T>,\n    newestOnTop: boolean,\n  ): ComponentRef<T> {\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(\n      portal.component,\n    );\n    let componentRef: ComponentRef<T>;\n\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the ChangeDetector for that component to the application (which\n    // happens automatically when using a ViewContainer).\n    componentRef = componentFactory.create(portal.injector);\n\n    // When creating a component outside of a ViewContainer, we need to manually register\n    // its ChangeDetector with the application. This API is unfortunately not yet published\n    // in Angular core. The change detector must also be deregistered when the component\n    // is destroyed to prevent memory leaks.\n    this._appRef.attachView(componentRef.hostView);\n\n    this.setDisposeFn(() => {\n      this._appRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    if (newestOnTop) {\n      this._hostDomElement.insertBefore(\n        this._getComponentRootNode(componentRef),\n        this._hostDomElement.firstChild,\n      );\n    } else {\n      this._hostDomElement.appendChild(\n        this._getComponentRootNode(componentRef),\n      );\n    }\n\n    return componentRef;\n  }\n\n  /** Gets the root HTMLElement for an instantiated component. */\n  private _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, OnDestroy } from '@angular/core';\n\n/** Container inside which all toasts will render. */\n@Injectable({ providedIn: 'root' })\nexport class OverlayContainer implements OnDestroy {\n  protected _containerElement!: HTMLElement;\n\n  constructor(@Inject(DOCUMENT) protected _document: any) {}\n\n  ngOnDestroy() {\n    if (this._containerElement && this._containerElement.parentNode) {\n      this._containerElement.parentNode.removeChild(this._containerElement);\n    }\n  }\n\n  /**\n   * This method returns the overlay container element. It will lazily\n   * create the element the first time  it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n  getContainerElement(): HTMLElement {\n    if (!this._containerElement) {\n      this._createContainer();\n    }\n    return this._containerElement;\n  }\n\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body.\n   */\n  protected _createContainer(): void {\n    const container = this._document.createElement('div');\n    container.classList.add('overlay-container');\n    this._document.body.appendChild(container);\n    this._containerElement = container;\n  }\n}\n","import { ComponentRef } from '@angular/core';\nimport { BasePortalHost, ComponentPortal } from '../portal/portal';\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nexport class OverlayRef {\n  constructor(private _portalHost: BasePortalHost) {}\n\n  attach(\n    portal: ComponentPortal<any>,\n    newestOnTop: boolean = true,\n  ): ComponentRef<any> {\n    return this._portalHost.attach(portal, newestOnTop);\n  }\n\n  /**\n   * Detaches an overlay from a portal.\n   * @returns Resolves when the overlay has been detached.\n   */\n  detach() {\n    return this._portalHost.detach();\n  }\n}\n","/* tslint:disable:no-non-null-assertion */\nimport { DOCUMENT } from '@angular/common';\nimport { ApplicationRef, ComponentFactoryResolver, Inject, Injectable } from '@angular/core';\n\nimport { DomPortalHost } from '../portal/dom-portal-host';\nimport { ToastContainerDirective } from '../toastr/toast.directive';\nimport { OverlayContainer } from './overlay-container';\nimport { OverlayRef } from './overlay-ref';\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\n@Injectable({ providedIn: 'root' })\nexport class Overlay {\n  // Namespace panes by overlay container\n  private _paneElements: Map<ToastContainerDirective, Record<string, HTMLElement>> = new Map();\n\n  constructor(\n    private _overlayContainer: OverlayContainer,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    @Inject(DOCUMENT) private _document: any,\n  ) {}\n  /**\n   * Creates an overlay.\n   * @returns A reference to the created overlay.\n   */\n  create(positionClass?: string, overlayContainer?: ToastContainerDirective): OverlayRef {\n    // get existing pane if possible\n    return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n  }\n\n  getPaneElement(\n    positionClass: string = '',\n    overlayContainer?: ToastContainerDirective,\n  ): HTMLElement {\n    if (!this._paneElements.get(overlayContainer as ToastContainerDirective)) {\n      this._paneElements.set(overlayContainer as ToastContainerDirective, {});\n    }\n\n    if (!this._paneElements.get(overlayContainer as ToastContainerDirective)![positionClass]) {\n      this._paneElements.get(overlayContainer as ToastContainerDirective)![\n        positionClass\n      ] = this._createPaneElement(positionClass, overlayContainer);\n    }\n\n    return this._paneElements.get(overlayContainer as ToastContainerDirective)![positionClass];\n  }\n\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n  private _createPaneElement(\n    positionClass: string,\n    overlayContainer?: ToastContainerDirective,\n  ): HTMLElement {\n    const pane = this._document.createElement('div');\n\n    pane.id = 'toast-container';\n    pane.classList.add(positionClass);\n    pane.classList.add('toast-container');\n\n    if (!overlayContainer) {\n      this._overlayContainer.getContainerElement().appendChild(pane);\n    } else {\n      overlayContainer.getContainerElement().appendChild(pane);\n    }\n\n    return pane;\n  }\n\n  /**\n   * Create a DomPortalHost into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal host.\n   * @returns A portal host for the given DOM element.\n   */\n  private _createPortalHost(pane: HTMLElement): DomPortalHost {\n    return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n  }\n\n  /**\n   * Creates an OverlayRef for an overlay in the given DOM element.\n   * @param pane DOM element for the overlay\n   */\n  private _createOverlayRef(pane: HTMLElement): OverlayRef {\n    return new OverlayRef(this._createPortalHost(pane));\n  }\n}\n","import { Injector, InjectFlags } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { OverlayRef } from '../overlay/overlay-ref';\nimport { ToastPackage } from './toastr-config';\n\n/**\n * Reference to a toast opened via the Toastr service.\n */\nexport class ToastRef<T> {\n  /** The instance of component opened into the toast. */\n  componentInstance!: T;\n\n  /** Count of duplicates of this toast */\n  private duplicatesCount = 0;\n\n  /** Subject for notifying the user that the toast has finished closing. */\n  private _afterClosed = new Subject<void>();\n  /** triggered when toast is activated */\n  private _activate = new Subject<void>();\n  /** notifies the toast that it should close before the timeout */\n  private _manualClose = new Subject<void>();\n  /** notifies the toast that it should reset the timeouts */\n  private _resetTimeout = new Subject<void>();\n  /** notifies the toast that it should count a duplicate toast */\n  private _countDuplicate = new Subject<number>();\n\n  constructor(private _overlayRef: OverlayRef) {}\n\n  manualClose() {\n    this._manualClose.next();\n    this._manualClose.complete();\n  }\n\n  manualClosed(): Observable<any> {\n    return this._manualClose.asObservable();\n  }\n\n  timeoutReset(): Observable<any> {\n    return this._resetTimeout.asObservable();\n  }\n\n  countDuplicate(): Observable<number> {\n    return this._countDuplicate.asObservable();\n  }\n\n  /**\n   * Close the toast.\n   */\n  close(): void {\n    this._overlayRef.detach();\n    this._afterClosed.next();\n    this._manualClose.next();\n    this._afterClosed.complete();\n    this._manualClose.complete();\n    this._activate.complete();\n    this._resetTimeout.complete();\n    this._countDuplicate.complete();\n  }\n\n  /** Gets an observable that is notified when the toast is finished closing. */\n  afterClosed(): Observable<any> {\n    return this._afterClosed.asObservable();\n  }\n\n  isInactive() {\n    return this._activate.isStopped;\n  }\n\n  activate() {\n    this._activate.next();\n    this._activate.complete();\n  }\n\n  /** Gets an observable that is notified when the toast has started opening. */\n  afterActivate(): Observable<any> {\n    return this._activate.asObservable();\n  }\n\n  /** Reset the toast timouts and count duplicates */\n  onDuplicate(resetTimeout: boolean, countDuplicate: boolean) {\n    if (resetTimeout) {\n      this._resetTimeout.next();\n    }\n    if (countDuplicate) {\n      this._countDuplicate.next(++this.duplicatesCount);\n    }\n  }\n}\n\n/** Custom injector type specifically for instantiating components with a toast. */\nexport class ToastInjector implements Injector {\n  constructor(\n    private _toastPackage: ToastPackage,\n    private _parentInjector: Injector\n  ) {}\n\n  get<T>(token: any, notFoundValue?: T, flags?: InjectFlags): T | ToastPackage {\n    if (token === ToastPackage) {\n      return this._toastPackage;\n    }\n    return this._parentInjector.get<T>(token, notFoundValue, flags);\n  }\n}\n","import { ComponentRef, Inject, Injectable, Injector, NgZone, SecurityContext } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { Observable } from 'rxjs';\n\nimport { Overlay } from '../overlay/overlay';\nimport { ComponentPortal } from '../portal/portal';\nimport { ToastInjector, ToastRef } from './toast-injector';\nimport { ToastContainerDirective } from './toast.directive';\nimport {\n  GlobalConfig,\n  IndividualConfig,\n  ToastPackage,\n  ToastToken,\n  TOAST_CONFIG,\n} from './toastr-config';\n\nexport interface ActiveToast<C> {\n  /** Your Toast ID. Use this to close it individually */\n  toastId: number;\n  /** the title of your toast. Stored to prevent duplicates */\n  title: string;\n  /** the message of your toast. Stored to prevent duplicates */\n  message: string;\n  /** a reference to the component see portal.ts */\n  portal: ComponentRef<C>;\n  /** a reference to your toast */\n  toastRef: ToastRef<C>;\n  /** triggered when toast is active */\n  onShown: Observable<void>;\n  /** triggered when toast is destroyed */\n  onHidden: Observable<void>;\n  /** triggered on toast click */\n  onTap: Observable<void>;\n  /** available for your use in custom toast */\n  onAction: Observable<any>;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ToastrService {\n  toastrConfig: GlobalConfig;\n  currentlyActive = 0;\n  toasts: ActiveToast<any>[] = [];\n  overlayContainer?: ToastContainerDirective;\n  previousToastMessage: string | undefined;\n  private index = 0;\n\n  constructor(\n    @Inject(TOAST_CONFIG) token: ToastToken,\n    private overlay: Overlay,\n    private _injector: Injector,\n    private sanitizer: DomSanitizer,\n    private ngZone: NgZone,\n  ) {\n    this.toastrConfig = {\n      ...token.default,\n      ...token.config,\n    };\n    if (token.config.iconClasses) {\n      this.toastrConfig.iconClasses = {\n        ...token.default.iconClasses,\n        ...token.config.iconClasses,\n      };\n    }\n  }\n  /** show toast */\n  show(message?: string, title?: string, override: Partial<IndividualConfig> = {}, type = '') {\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show successful toast */\n  success(message?: string, title?: string, override: Partial<IndividualConfig> = {}) {\n    const type = this.toastrConfig.iconClasses.success || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show error toast */\n  error(message?: string, title?: string, override: Partial<IndividualConfig> = {}) {\n    const type = this.toastrConfig.iconClasses.error || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show info toast */\n  info(message?: string, title?: string, override: Partial<IndividualConfig> = {}) {\n    const type = this.toastrConfig.iconClasses.info || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show warning toast */\n  warning(message?: string, title?: string, override: Partial<IndividualConfig> = {}) {\n    const type = this.toastrConfig.iconClasses.warning || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /**\n   * Remove all or a single toast by id\n   */\n  clear(toastId?: number) {\n    // Call every toastRef manualClose function\n    for (const toast of this.toasts) {\n      if (toastId !== undefined) {\n        if (toast.toastId === toastId) {\n          toast.toastRef.manualClose();\n          return;\n        }\n      } else {\n        toast.toastRef.manualClose();\n      }\n    }\n  }\n  /**\n   * Remove and destroy a single toast by id\n   */\n  remove(toastId: number) {\n    const found = this._findToast(toastId);\n    if (!found) {\n      return false;\n    }\n    found.activeToast.toastRef.close();\n    this.toasts.splice(found.index, 1);\n    this.currentlyActive = this.currentlyActive - 1;\n    if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n      return false;\n    }\n    if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n      const p = this.toasts[this.currentlyActive].toastRef;\n      if (!p.isInactive()) {\n        this.currentlyActive = this.currentlyActive + 1;\n        p.activate();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determines if toast message is already shown\n   */\n  findDuplicate(title = '', message = '', resetOnDuplicate: boolean, countDuplicates: boolean) {\n    const { includeTitleDuplicates } = this.toastrConfig;\n\n    for (const toast of this.toasts) {\n      const hasDuplicateTitle = includeTitleDuplicates && toast.title === title;\n      if ((!includeTitleDuplicates || hasDuplicateTitle) && toast.message === message) {\n        toast.toastRef.onDuplicate(resetOnDuplicate, countDuplicates);\n        return toast;\n      }\n    }\n\n    return null;\n  }\n\n  /** create a clone of global config and apply individual settings */\n  private applyConfig(override: Partial<IndividualConfig> = {}): GlobalConfig {\n    return { ...this.toastrConfig, ...override };\n  }\n\n  /**\n   * Find toast object by id\n   */\n  private _findToast(toastId: number): { index: number; activeToast: ActiveToast<any> } | null {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].toastId === toastId) {\n        return { index: i, activeToast: this.toasts[i] };\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Determines the need to run inside angular's zone then builds the toast\n   */\n  private _preBuildNotification(\n    toastType: string,\n    message: string | undefined,\n    title: string | undefined,\n    config: GlobalConfig,\n  ): ActiveToast<any> | null {\n    if (config.onActivateTick) {\n      return this.ngZone.run(() => this._buildNotification(toastType, message, title, config));\n    }\n    return this._buildNotification(toastType, message, title, config);\n  }\n\n  /**\n   * Creates and attaches toast data to component\n   * returns the active toast, or in case preventDuplicates is enabled the original/non-duplicate active toast.\n   */\n  private _buildNotification(\n    toastType: string,\n    message: string | undefined,\n    title: string | undefined,\n    config: GlobalConfig,\n  ): ActiveToast<any> | null {\n    if (!config.toastComponent) {\n      throw new Error('toastComponent required');\n    }\n    // max opened and auto dismiss = true\n    // if timeout = 0 resetting it would result in setting this.hideTime = Date.now(). Hence, we only want to reset timeout if there is\n    // a timeout at all\n    const duplicate = this.findDuplicate(\n      title,\n      message,\n      this.toastrConfig.resetTimeoutOnDuplicate && config.timeOut > 0,\n      this.toastrConfig.countDuplicates,\n    );\n    if (\n      ((this.toastrConfig.includeTitleDuplicates && title) || message) &&\n      this.toastrConfig.preventDuplicates &&\n      duplicate !== null\n    ) {\n      return duplicate;\n    }\n\n    this.previousToastMessage = message;\n    let keepInactive = false;\n    if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n      keepInactive = true;\n      if (this.toastrConfig.autoDismiss) {\n        this.clear(this.toasts[0].toastId);\n      }\n    }\n\n    const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n    this.index = this.index + 1;\n    let sanitizedMessage: string | undefined | null = message;\n    if (message && config.enableHtml) {\n      sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n    }\n\n    const toastRef = new ToastRef(overlayRef);\n    const toastPackage = new ToastPackage(\n      this.index,\n      config,\n      sanitizedMessage,\n      title,\n      toastType,\n      toastRef,\n    );\n    const toastInjector = new ToastInjector(toastPackage, this._injector);\n    const component = new ComponentPortal(config.toastComponent, toastInjector);\n    const portal = overlayRef.attach(component, this.toastrConfig.newestOnTop);\n    toastRef.componentInstance = portal.instance;\n    const ins: ActiveToast<any> = {\n      toastId: this.index,\n      title: title || '',\n      message: message || '',\n      toastRef,\n      onShown: toastRef.afterActivate(),\n      onHidden: toastRef.afterClosed(),\n      onTap: toastPackage.onTap(),\n      onAction: toastPackage.onAction(),\n      portal,\n    };\n\n    if (!keepInactive) {\n      this.currentlyActive = this.currentlyActive + 1;\n      setTimeout(() => {\n        ins.toastRef.activate();\n      });\n    }\n\n    this.toasts.push(ins);\n    return ins;\n  }\n}\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger\n} from '@angular/animations';\nimport {\n  Component,\n  HostBinding,\n  HostListener,\n  NgZone,\n  OnDestroy\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { IndividualConfig, ToastPackage } from './toastr-config';\nimport { ToastrService } from './toastr.service';\n\n@Component({\n  selector: '[toast-component]',\n  template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n  animations: [\n    trigger('flyInOut', [\n      state('inactive', style({ opacity: 0 })),\n      state('active', style({ opacity: 1 })),\n      state('removed', style({ opacity: 0 })),\n      transition(\n        'inactive => active',\n        animate('{{ easeTime }}ms {{ easing }}')\n      ),\n      transition(\n        'active => removed',\n        animate('{{ easeTime }}ms {{ easing }}')\n      )\n    ])\n  ],\n  preserveWhitespaces: false\n})\nexport class Toast implements OnDestroy {\n  message?: string | null;\n  title?: string;\n  options: IndividualConfig;\n  duplicatesCount!: number;\n  originalTimeout: number;\n  /** width of progress bar */\n  width = -1;\n  /** a combination of toast type and options.toastClass */\n  @HostBinding('class') toastClasses = '';\n  /** controls animation */\n  @HostBinding('@flyInOut')\n  state = {\n    value: 'inactive',\n    params: {\n      easeTime: this.toastPackage.config.easeTime,\n      easing: 'ease-in'\n    }\n  };\n\n  /** hides component when waiting to be displayed */\n  @HostBinding('style.display')\n  get displayStyle(): string | undefined {\n    if (this.state.value === 'inactive') {\n      return 'none';\n    }\n\n    return;\n  }\n\n  private timeout: any;\n  private intervalId: any;\n  private hideTime!: number;\n  private sub: Subscription;\n  private sub1: Subscription;\n  private sub2: Subscription;\n  private sub3: Subscription;\n\n  constructor(\n    protected toastrService: ToastrService,\n    public toastPackage: ToastPackage,\n    protected ngZone?: NgZone\n  ) {\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.originalTimeout = toastPackage.config.timeOut;\n    this.toastClasses = `${toastPackage.toastType} ${\n      toastPackage.config.toastClass\n    }`;\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n      this.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n      this.remove();\n    });\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n      this.resetTimeout();\n    });\n    this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n      this.duplicatesCount = count;\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.sub1.unsubscribe();\n    this.sub2.unsubscribe();\n    this.sub3.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n  activateToast() {\n    this.state = { ...this.state, value: 'active' };\n    if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n      this.outsideTimeout(() => this.remove(), this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n      if (this.options.progressBar) {\n        this.outsideInterval(() => this.updateProgress(), 10);\n      }\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n  updateProgress() {\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n      return;\n    }\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width = (remaining / this.options.timeOut) * 100;\n    if (this.options.progressAnimation === 'increasing') {\n      this.width = 100 - this.width;\n    }\n    if (this.width <= 0) {\n      this.width = 0;\n    }\n    if (this.width >= 100) {\n      this.width = 100;\n    }\n  }\n\n  resetTimeout() {\n    clearTimeout(this.timeout);\n    clearInterval(this.intervalId);\n    this.state = { ...this.state, value: 'active' };\n\n    this.outsideTimeout(() => this.remove(), this.originalTimeout);\n    this.options.timeOut = this.originalTimeout;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.outsideInterval(() => this.updateProgress(), 10);\n    }\n  }\n\n  /**\n   * tells toastrService to remove this toast after animation time\n   */\n  remove() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.state = { ...this.state, value: 'removed' };\n    this.outsideTimeout(\n      () => this.toastrService.remove(this.toastPackage.toastId),\n      +this.toastPackage.config.easeTime\n    );\n  }\n  @HostListener('click')\n  tapToast() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    this.toastPackage.triggerTap();\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n  @HostListener('mouseenter')\n  stickAround() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.options.timeOut = 0;\n    this.hideTime = 0;\n\n    // disable progressBar\n    clearInterval(this.intervalId);\n    this.width = 0;\n  }\n  @HostListener('mouseleave')\n  delayedHideToast() {\n    if (\n      (this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut') ||\n      this.options.extendedTimeOut === 0 ||\n      this.state.value === 'removed'\n    ) {\n      return;\n    }\n    this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.outsideInterval(() => this.updateProgress(), 10);\n    }\n  }\n\n  outsideTimeout(func: () => any, timeout: number) {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(\n        () =>\n          (this.timeout = setTimeout(\n            () => this.runInsideAngular(func),\n            timeout\n          ))\n      );\n    } else {\n      this.timeout = setTimeout(() => func(), timeout);\n    }\n  }\n\n  outsideInterval(func: () => any, timeout: number) {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(\n        () =>\n          (this.intervalId = setInterval(\n            () => this.runInsideAngular(func),\n            timeout\n          ))\n      );\n    } else {\n      this.intervalId = setInterval(() => func(), timeout);\n    }\n  }\n\n  private runInsideAngular(func: () => any) {\n    if (this.ngZone) {\n      this.ngZone.run(() => func());\n    } else {\n      func();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { Toast } from './toast.component';\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  TOAST_CONFIG,\n} from './toastr-config';\n\nexport const DefaultGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: Toast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [Toast],\n  exports: [Toast],\n  entryComponents: [Toast],\n})\nexport class ToastrModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<ToastrModule> {\n    return {\n      ngModule: ToastrModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: DefaultGlobalConfig,\n            config,\n          },\n        },\n      ],\n    };\n  }\n}\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class ToastrComponentlessModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<ToastrModule> {\n    return {\n      ngModule: ToastrModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: DefaultNoComponentGlobalConfig,\n            config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders } from '@angular/core';\nimport {\n  ApplicationRef,\n  Component,\n  HostBinding,\n  HostListener,\n  NgModule,\n  OnDestroy,\n} from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  IndividualConfig,\n  ToastPackage,\n  TOAST_CONFIG,\n} from './toastr-config';\nimport { ToastrService } from './toastr.service';\n\n@Component({\n  selector: '[toast-component]',\n  template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n})\nexport class ToastNoAnimation implements OnDestroy {\n  message?: string | null;\n  title?: string;\n  options: IndividualConfig;\n  duplicatesCount!: number;\n  originalTimeout: number;\n  /** width of progress bar */\n  width = -1;\n  /** a combination of toast type and options.toastClass */\n  @HostBinding('class') toastClasses = '';\n\n  /** hides component when waiting to be displayed */\n  @HostBinding('style.display')\n  get displayStyle() {\n    if (this.state === 'inactive') {\n      return 'none';\n    }\n  }\n\n  /** controls animation */\n  state = 'inactive';\n  private timeout: any;\n  private intervalId: any;\n  private hideTime!: number;\n  private sub: Subscription;\n  private sub1: Subscription;\n  private sub2: Subscription;\n  private sub3: Subscription;\n\n  constructor(\n    protected toastrService: ToastrService,\n    public toastPackage: ToastPackage,\n    protected appRef: ApplicationRef,\n  ) {\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.originalTimeout = toastPackage.config.timeOut;\n    this.toastClasses = `${toastPackage.toastType} ${\n      toastPackage.config.toastClass\n    }`;\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n      this.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n      this.remove();\n    });\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n      this.resetTimeout();\n    });\n    this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n      this.duplicatesCount = count;\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.sub1.unsubscribe();\n    this.sub2.unsubscribe();\n    this.sub3.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n  activateToast() {\n    this.state = 'active';\n    if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n      this.timeout = setTimeout(() => {\n        this.remove();\n      }, this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n      if (this.options.progressBar) {\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\n      }\n    }\n    if (this.options.onActivateTick) {\n      this.appRef.tick();\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n  updateProgress() {\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n      return;\n    }\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width = (remaining / this.options.timeOut) * 100;\n    if (this.options.progressAnimation === 'increasing') {\n      this.width = 100 - this.width;\n    }\n    if (this.width <= 0) {\n      this.width = 0;\n    }\n    if (this.width >= 100) {\n      this.width = 100;\n    }\n  }\n\n  resetTimeout() {\n    clearTimeout(this.timeout);\n    clearInterval(this.intervalId);\n    this.state = 'active';\n\n    this.options.timeOut = this.originalTimeout;\n    this.timeout = setTimeout(() => this.remove(), this.originalTimeout);\n    this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\n    }\n  }\n\n  /**\n   * tells toastrService to remove this toast after animation time\n   */\n  remove() {\n    if (this.state === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.state = 'removed';\n    this.timeout = setTimeout(() =>\n      this.toastrService.remove(this.toastPackage.toastId),\n    );\n  }\n  @HostListener('click')\n  tapToast() {\n    if (this.state === 'removed') {\n      return;\n    }\n    this.toastPackage.triggerTap();\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n  @HostListener('mouseenter')\n  stickAround() {\n    if (this.state === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.options.timeOut = 0;\n    this.hideTime = 0;\n\n    // disable progressBar\n    clearInterval(this.intervalId);\n    this.width = 0;\n  }\n  @HostListener('mouseleave')\n  delayedHideToast() {\n    if (\n      (this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut') ||\n      this.options.extendedTimeOut === 0 ||\n      this.state === 'removed'\n    ) {\n      return;\n    }\n    this.timeout = setTimeout(\n      () => this.remove(),\n      this.options.extendedTimeOut,\n    );\n    this.options.timeOut = this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\n    }\n  }\n}\n\nexport const DefaultNoAnimationsGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: ToastNoAnimation,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ToastNoAnimation],\n  exports: [ToastNoAnimation],\n  entryComponents: [ToastNoAnimation],\n})\nexport class ToastNoAnimationModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<ToastNoAnimationModule> {\n    return {\n      ngModule: ToastNoAnimationModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: DefaultNoAnimationsGlobalConfig,\n            config,\n          },\n        },\n      ],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}