{"version":3,"file":"typeahead-window.d.ts","sources":["typeahead-window.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnInit, TemplateRef } from '@angular/core';\nimport { toString } from '../util/util';\n/**\n * The context for the typeahead result template in case you want to override the default one.\n */\nexport interface ResultTemplateContext {\n    /**\n     * Your typeahead result item.\n     */\n    result: any;\n    /**\n     * Search term from the `<input>` used to get current result.\n     */\n    term: string;\n}\nexport declare class NgbTypeaheadWindow implements OnInit {\n    activeIdx: number;\n    /**\n     *  The id for the typeahead window. The id should be unique and the same\n     *  as the associated typeahead's id.\n     */\n    id: string;\n    /**\n     * Flag indicating if the first row should be active initially\n     */\n    focusFirst: boolean;\n    /**\n     * Typeahead match results to be displayed\n     */\n    results: any;\n    /**\n     * Search term used to get current results\n     */\n    term: string;\n    /**\n     * A function used to format a given result before display. This function should return a formatted string without any\n     * HTML markup\n     */\n    formatter: typeof toString;\n    /**\n     * A template to override a matching result default display\n     */\n    resultTemplate: TemplateRef<ResultTemplateContext>;\n    /**\n     * Event raised when user selects a particular result row\n     */\n    selectEvent: EventEmitter<any>;\n    activeChangeEvent: EventEmitter<any>;\n    hasActive(): boolean;\n    getActive(): any;\n    markActive(activeIdx: number): void;\n    next(): void;\n    prev(): void;\n    resetActive(): void;\n    select(item: any): void;\n    ngOnInit(): void;\n    private _activeChanged;\n}\n"]}