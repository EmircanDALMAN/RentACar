{"version":3,"file":"timepicker.d.ts","sources":["timepicker.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { NgbTime } from './ngb-time';\nimport { NgbTimepickerConfig } from './timepicker-config';\nimport { NgbTimeAdapter } from './ngb-time-adapter';\nimport { NgbTimepickerI18n } from './timepicker-i18n';\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\nexport declare class NgbTimepicker implements ControlValueAccessor, OnChanges {\n    private readonly _config;\n    private _ngbTimeAdapter;\n    private _cd;\n    i18n: NgbTimepickerI18n;\n    static ngAcceptInputType_size: string;\n    disabled: boolean;\n    model: NgbTime;\n    private _hourStep;\n    private _minuteStep;\n    private _secondStep;\n    /**\n     * Whether to display 12H or 24H mode.\n     */\n    meridian: boolean;\n    /**\n     * If `true`, the spinners above and below inputs are visible.\n     */\n    spinners: boolean;\n    /**\n     * If `true`, it is possible to select seconds.\n     */\n    seconds: boolean;\n    /**\n     * The number of hours to add/subtract when clicking hour spinners.\n     */\n    set hourStep(step: number);\n    get hourStep(): number;\n    /**\n     * The number of minutes to add/subtract when clicking minute spinners.\n     */\n    set minuteStep(step: number);\n    get minuteStep(): number;\n    /**\n     * The number of seconds to add/subtract when clicking second spinners.\n     */\n    set secondStep(step: number);\n    get secondStep(): number;\n    /**\n     * If `true`, the timepicker is readonly and can't be changed.\n     */\n    readonlyInputs: boolean;\n    /**\n     * The size of inputs and buttons.\n     */\n    size: 'small' | 'medium' | 'large';\n    constructor(_config: NgbTimepickerConfig, _ngbTimeAdapter: NgbTimeAdapter<any>, _cd: ChangeDetectorRef, i18n: NgbTimepickerI18n);\n    onChange: (_: any) => void;\n    onTouched: () => void;\n    writeValue(value: any): void;\n    registerOnChange(fn: (value: any) => any): void;\n    registerOnTouched(fn: () => any): void;\n    setDisabledState(isDisabled: boolean): void;\n    changeHour(step: number): void;\n    changeMinute(step: number): void;\n    changeSecond(step: number): void;\n    updateHour(newVal: string): void;\n    updateMinute(newVal: string): void;\n    updateSecond(newVal: string): void;\n    toggleMeridian(): void;\n    formatInput(input: HTMLInputElement): void;\n    formatHour(value?: number): string;\n    formatMinSec(value?: number): string;\n    get isSmallSize(): boolean;\n    get isLargeSize(): boolean;\n    ngOnChanges(changes: SimpleChanges): void;\n    private propagateModelChange;\n}\n"]}