{"version":3,"file":"progressbar.d.ts","sources":["progressbar.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NgbProgressbarConfig } from './progressbar-config';\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\nexport declare class NgbProgressbar {\n    private _max;\n    /**\n     * The maximal value to be displayed in the progress bar.\n     *\n     * Should be a positive number. Will default to 100 otherwise.\n     */\n    set max(max: number);\n    get max(): number;\n    /**\n     * If `true`, the stripes on the progress bar are animated.\n     *\n     * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n     */\n    animated: boolean;\n    /**\n     * If `true`, the progress bars will be displayed as striped.\n     */\n    striped: boolean;\n    /**\n     * If `true`, the current percentage will be shown in the `xx%` format.\n     */\n    showValue: boolean;\n    /**\n     * Optional text variant type of the progress bar.\n     *\n     * Supports types based on Bootstrap background color variants, like:\n     *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n     *\n     * @since 5.2.0\n     */\n    textType: string;\n    /**\n     * The type of the progress bar.\n     *\n     * Supports types based on Bootstrap background color variants, like:\n     *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n     */\n    type: string;\n    /**\n     * The current value for the progress bar.\n     *\n     * Should be in the `[0, max]` range.\n     */\n    value: number;\n    /**\n     * The height of the progress bar.\n     *\n     * Accepts any valid CSS height values, ex. `\"2rem\"`\n     */\n    height: string;\n    constructor(config: NgbProgressbarConfig);\n    getValue(): number;\n    getPercentValue(): number;\n}\n"]}