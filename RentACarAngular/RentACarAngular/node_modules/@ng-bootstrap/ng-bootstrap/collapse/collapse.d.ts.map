{"version":3,"file":"collapse.d.ts","sources":["collapse.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, NgZone, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { NgbCollapseConfig } from './collapse-config';\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\nexport declare class NgbCollapse implements OnInit, OnChanges {\n    private _element;\n    private _zone;\n    /**\n     * If `true`, collapse will be animated.\n     *\n     * Animation is triggered only when clicked on triggering element\n     * or via the `.toggle()` function\n     *\n     * @since 8.0.0\n     */\n    animation: any;\n    /**\n     * If `true`, will collapse the element or show it otherwise.\n     */\n    collapsed: boolean;\n    ngbCollapseChange: EventEmitter<boolean>;\n    /**\n     * An event emitted when the collapse element is shown, after the transition. It has no payload.\n     *\n     * @since 8.0.0\n     */\n    shown: EventEmitter<void>;\n    /**\n     * An event emitted when the collapse element is hidden, after the transition. It has no payload.\n     *\n     * @since 8.0.0\n     */\n    hidden: EventEmitter<void>;\n    constructor(_element: ElementRef, config: NgbCollapseConfig, _zone: NgZone);\n    ngOnInit(): void;\n    ngOnChanges({ collapsed }: SimpleChanges): void;\n    /**\n     * Triggers collapsing programmatically.\n     *\n     * If there is a collapsing transition running already, it will be reversed.\n     * If the animations are turned off this happens synchronously.\n     *\n     * @since 8.0.0\n     */\n    toggle(open?: boolean): void;\n    private _runTransition;\n    private _runTransitionWithEvents;\n}\n"]}