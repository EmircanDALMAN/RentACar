{"version":3,"file":"datepicker-i18n.d.ts","sources":["datepicker-i18n.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NgbDateStruct } from './ngb-date-struct';\nexport declare function NGB_DATEPICKER_18N_FACTORY(locale: any): NgbDatepickerI18nDefault;\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\nexport declare abstract class NgbDatepickerI18n {\n    /**\n     * Returns the short weekday name to display in the heading of the month view.\n     *\n     * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n     */\n    abstract getWeekdayShortName(weekday: number): string;\n    /**\n     * Returns the short month name to display in the date picker navigation.\n     *\n     * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     */\n    abstract getMonthShortName(month: number, year?: number): string;\n    /**\n     * Returns the full month name to display in the date picker navigation.\n     *\n     * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     */\n    abstract getMonthFullName(month: number, year?: number): string;\n    /**\n     * Returns the value of the `aria-label` attribute for a specific date.\n     *\n     * @since 2.0.0\n     */\n    abstract getDayAriaLabel(date: NgbDateStruct): string;\n    /**\n     * Returns the textual representation of a day that is rendered in a day cell.\n     *\n     * @since 3.0.0\n     */\n    getDayNumerals(date: NgbDateStruct): string;\n    /**\n     * Returns the textual representation of a week number rendered by datepicker.\n     *\n     * @since 3.0.0\n     */\n    getWeekNumerals(weekNumber: number): string;\n    /**\n     * Returns the textual representation of a year that is rendered in the datepicker year select box.\n     *\n     * @since 3.0.0\n     */\n    getYearNumerals(year: number): string;\n}\nexport declare class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n    private _locale;\n    private _weekdaysShort;\n    private _monthsShort;\n    private _monthsFull;\n    constructor(_locale: string);\n    getWeekdayShortName(weekday: number): string;\n    getMonthShortName(month: number): string;\n    getMonthFullName(month: number): string;\n    getDayAriaLabel(date: NgbDateStruct): string;\n}\n"]}