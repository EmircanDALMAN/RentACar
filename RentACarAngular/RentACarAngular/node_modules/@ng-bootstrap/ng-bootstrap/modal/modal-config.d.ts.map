{"version":3,"file":"modal-config.d.ts","sources":["modal-config.d.ts"],"names":[],"mappingssourcesContent":["import { Injector } from '@angular/core';\nimport { NgbConfig } from '../ngb-config';\n/**\n * Options available when opening new modal windows with `NgbModal.open()` method.\n */\nexport interface NgbModalOptions {\n    /**\n     * If `true`, modal opening and closing will be animated.\n     *\n     * @since 8.0.0\n     */\n    animation?: boolean;\n    /**\n     * `aria-labelledby` attribute value to set on the modal window.\n     *\n     * @since 2.2.0\n     */\n    ariaLabelledBy?: string;\n    /**\n     * `aria-describedby` attribute value to set on the modal window.\n     *\n     * @since 6.1.0\n     */\n    ariaDescribedBy?: string;\n    /**\n     * If `true`, the backdrop element will be created for a given modal.\n     *\n     * Alternatively, specify `'static'` for a backdrop which doesn't close the modal on click.\n     *\n     * Default value is `true`.\n     */\n    backdrop?: boolean | 'static';\n    /**\n     * Callback right before the modal will be dismissed.\n     *\n     * If this function returns:\n     * * `false`\n     * * a promise resolved with `false`\n     * * a promise that is rejected\n     *\n     * then the modal won't be dismissed.\n     */\n    beforeDismiss?: () => boolean | Promise<boolean>;\n    /**\n     * If `true`, the modal will be centered vertically.\n     *\n     * Default value is `false`.\n     *\n     * @since 1.1.0\n     */\n    centered?: boolean;\n    /**\n     * A selector specifying the element all new modal windows should be appended to.\n     * Since v5.3.0 it is also possible to pass the reference to an `HTMLElement`.\n     *\n     * If not specified, will be `body`.\n     */\n    container?: string | HTMLElement;\n    /**\n     * The `Injector` to use for modal content.\n     */\n    injector?: Injector;\n    /**\n     * If `true`, the modal will be closed when `Escape` key is pressed\n     *\n     * Default value is `true`.\n     */\n    keyboard?: boolean;\n    /**\n     * Scrollable modal content (false by default).\n     *\n     * @since 5.0.0\n     */\n    scrollable?: boolean;\n    /**\n     * Size of a new modal window.\n     */\n    size?: 'sm' | 'lg' | 'xl' | string;\n    /**\n     * A custom class to append to the modal window.\n     */\n    windowClass?: string;\n    /**\n     * A custom class to append to the modal backdrop.\n     *\n     * @since 1.1.0\n     */\n    backdropClass?: string;\n}\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n*\n* @since 3.1.0\n*/\nexport declare class NgbModalConfig implements Required<NgbModalOptions> {\n    private _ngbConfig;\n    ariaLabelledBy: string;\n    ariaDescribedBy: string;\n    backdrop: boolean | 'static';\n    beforeDismiss: () => boolean | Promise<boolean>;\n    centered: boolean;\n    container: string;\n    injector: Injector;\n    keyboard: boolean;\n    scrollable: boolean;\n    size: 'sm' | 'lg' | 'xl' | string;\n    windowClass: string;\n    backdropClass: string;\n    private _animation;\n    constructor(_ngbConfig: NgbConfig);\n    get animation(): boolean;\n    set animation(animation: boolean);\n}\n"]}